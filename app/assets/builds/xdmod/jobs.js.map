{
  "version": 3,
  "sources": ["../../../javascript/config.js", "../../../javascript/utils.js", "../../../javascript/xdmod/jobs.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "import {analyticsPath} from \"./config\";\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  const href = event.target.href;\n\n  // do nothing if there's no href.\n  if(href == null){\n    return;\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n", "'use strict';\n\nimport {reportErrorForAnalytics} from '../utils';\n\nexport function jobsPanel(context, helpers){\n  const div = document.createElement('div');\n  div.classList.add('xdmod');\n\n  div.append(card(context, helpers));\n\n  return div;\n}\n\nfunction card(context, helpers) {\n  const div = document.createElement('div');\n  div.classList.add('card', 'mt-3');\n\n  div.append(cardHeader(helpers));\n  div.append(cardBody(context, helpers));\n\n  return div;\n}\n\nfunction cardHeader(helpers) {\n  const div = document.createElement('div');\n  div.classList.add('card-header');\n  div.innerHTML = `<a href=\"${helpers.xdmod_url()}\" class=\"float-end\">Open XDMoD <span class=\"fa fa-external-link-square-alt\"></span></a>\n                   <h3>${helpers.title()} - ${helpers.date_range()}</h3>`;\n\n  return div;\n}\n\nfunction cardBody(context, helpers) {\n  if(context.error !== undefined) {\n    return errorBody(context.error, helpers);\n  } else if(context.loading !== undefined) {\n    return loadingBody();\n  } else {\n    return successBody(context, helpers);\n  }\n}\n\nfunction errorBody(error, helpers) {\n  const div = simpleCardBody();\n  \n  const content = `<div class=\"alert alert-danger mb-0\">\n                      ${error} Please ensure you are <a href=\"${helpers.xdmod_url()}\">logged into Open XDMoD first</a>, and then try again.\n                    </div>`;\n  div.innerHTML = content;\n  return div;\n}\n\nfunction loadingBody() {\n  const div = simpleCardBody();\n  div.innerHTML = '<p class=\"card-text\">LOADING...</p>';\n\n  return div;\n}\n\nfunction successBody(context, helpers) {\n  const div = simpleCardBody();\n  div.append(table(context, helpers));\n\n  return div;\n}\n\nfunction simpleCardBody() {\n  const div = document.createElement('div');\n  div.classList.add('card-body');\n\n  return div;\n}\n\nfunction table(context, helpers) {\n  const div = document.createElement('div');\n  div.classList.add('table-responsive');\n\n  const tableElement = document.createElement('table');\n  // <table class=\"table table-sm table-striped table-condensed\">\n  tableElement.classList.add('table', 'table-sm', 'table-striped', 'table-condensed');\n\n  const thead = document.createElement('thead');\n  // Empty th to accommodate for the job analytics button\n  thead.innerHTML = '<tr> \\\n                      <th class=\"sr-only\">Analytics Toggle</th> \\\n                      <th class=\"id\">ID</th> \\\n                      <th class=\"name\">Name</th> \\\n                      <th class=\"date\">Date</th> \\\n                      <th class=\"sr-only\">Analytics</th> \\\n                    </tr>';\n\n  const tbody = document.createElement('tbody');\n  tbody.append(...tableRows(context, helpers));\n\n  tableElement.append(thead);\n  tableElement.append(tbody);\n\n  div.append(tableElement);\n\n  return div;\n}\n\nfunction tableRows(context, helpers) {\n  const jobs = context.results;\n  if (jobs === undefined || jobs.length == 0) {\n    return [ noDataRow() ];\n  }\n\n  const rows = [];\n\n  // <tr title=\"{{job_name}} - {{local_job_id}}\">\n  //   <td class=\"text-nowrap\"><a target=\"_blank\" href=\"{{job_url}}\">{{local_job_id}}&nbsp;<span class=\"fa fa-external-link-square-alt\"></span></a></td>\n  //   <td class=\"overflow-hidden d-inline-block text-truncate mw-150px\">{{job_name}}</td>\n  //   <td>{{date}}</td>\n  //   <td>{{cpu_label cpu_user}}</td>\n  // </tr>\n  jobs.forEach(job => {\n    const tr = document.createElement('tr');\n    tr.title = `${job.job_name} - ${job.local_job_id}`;\n    // Job Analytics metadata => Required for the AJAX request and collapse behaviour\n    tr.setAttribute('data-xdmod-jobid', job.jobid);\n    tr.setAttribute('data-bs-toggle', 'collapse');\n    tr.setAttribute('data-bs-target', `#details_${job.jobid}`);\n    tr.setAttribute('aria-expanded', 'false');\n\n    // Job analytics collapse icons\n    const td0 = document.createElement('td');\n    td0.innerHTML = `\n      <button class=\"btn btn-default btn-xs\">\n        <i class=\"fa fa-plus fa-fw app-icon closed\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-minus fa-fw app-icon open\" aria-hidden=\"true\"></i>\n      </button>`\n    \n    //  <td class=\"text-nowrap\">\n    //    <a target=\"_blank\" href=\"{{job_url}}\">{{local_job_id}}&nbsp;<span class=\"fa fa-external-link-square-alt\"></span>\n    //    </a>\n    //  </td>\n    const td1 = document.createElement('td');\n    td1.classList.add('text-nowrap');\n    td1.append(jobLink(helpers.job_url(job.jobid), job.local_job_id));\n\n    //<td class=\"overflow-hidden d-inline-block text-truncate mw-150px\">{{job_name}}</td>\n    const td2 = document.createElement('td');\n    td2.classList.add('overflow-hidden', 'text-truncate', 'mw-150px');\n    td2.innerText = job.job_name;\n\n    // <td>{{date}}</td>\n    const td3 = document.createElement('td');\n    td3.innerText = helpers.date(job);\n\n    // <td>{{cpu_label cpu_user}}</td>\n    // Not used with new analytics data\n    // const td4 = document.createElement('td');\n    // td4.innerHTML = helpers.efficiency_label(job.cpu_user);\n\n    // Add job analytics placeholder\n    const td4 = document.createElement('td');\n    td4.id = `details_${job.jobid}`;\n    td4.classList.add('job-analytics', 'collapse');\n    td4.innerHTML = '<div class=\"job-analytics-content\"><span>LOADING...</span></div>';\n    // Call JobAnalytics API after the collapse is fully open to avoid awkward animation.\n    td4.addEventListener('shown.bs.collapse', function(event) {\n      getJobAnalytics(job, helpers);\n    }, { once: true });\n\n    tr.append(td0, td1, td2, td3, td4);\n\n    rows.push(tr);\n  });\n\n  return rows;\n}\n\nfunction jobLink(url, id){\n  const a = document.createElement('a');\n  a.href = url;\n  a.innerHTML = `${id} ${linkSpan()}`;\n\n  return a;\n}\n\nfunction linkSpan(){\n  return '<span class=\"fa fa-external-link-square-alt\"></span>';\n}\n\n// <tr><td colspan=\"7\">No data available.</td></tr>\nfunction noDataRow() {\n  const td = document.createElement('td');\n  td.setAttribute('colspan', '7');\n  td.innerHTML = 'No data available.';\n\n  const tr = document.createElement('tr');\n  tr.append(td);\n\n  return tr;\n}\n\nfunction renderJobAnalytics(analyticsData, jobData, containerId, helpers) {\n  if(analyticsData.error !== undefined) {\n    const errorMessage = errorBody(analyticsData.error, helpers);\n    const analyticsContainer = document.getElementById(containerId);\n    analyticsContainer.closest('tr').classList.add('error');\n    analyticsContainer.replaceChildren(errorMessage);\n    return;\n  }\n\n  // Index Job analytics data by analytics key\n  const dataByKey = analyticsData.data.reduce((acc, obj) => {\n    acc[obj.key] = obj;\n    return acc;\n  }, {});\n\n  // Default to jobData form the job search results.\n  // As the Jobs realm might not have any analytics metrics.\n  const cpuEfficiency = dataByKey['CPU User']?.value || jobData.cpu_user;\n  const memEfficiency = dataByKey['Memory Headroom']?.value;\n  const walltimeEfficiency = dataByKey['Walltime Accuracy']?.value || jobData.walltime_accuracy;\n  const div = document.createElement('div');\n  div.classList.add('job-analytics-content');\n  div.innerHTML = `<span><strong>CPU:</strong> ${helpers.efficiency_label(cpuEfficiency, false)}</span>\n                   <span><strong>Mem:</strong> ${helpers.efficiency_label(memEfficiency, true)}</span>\n                   <span><strong>Walltime:</strong> ${helpers.efficiency_label(walltimeEfficiency, false)}</span>`;\n\n  document.getElementById(containerId).replaceChildren(div);\n}\n\nfunction jobAnalyticsUrl(jobId, helpers){\n  let url = new URL(`${helpers.xdmod_url()}/rest/v1.0/warehouse/search/jobs/analytics`);\n  url.searchParams.set('_dc', Date.now());\n  url.searchParams.set('realm', helpers.realm);\n  url.searchParams.set('jobid', jobId);\n  return url;\n}\n\nfunction getJobAnalytics(jobData, helpers) {\n  const analyticsContainer = `details_${jobData.jobid}`;\n  fetch(jobAnalyticsUrl(jobData.jobid, helpers), { credentials: 'include' })\n      .then(response => response.ok ? Promise.resolve(response) : Promise.reject(new Error(response.statusText)))\n      .then(response => response.json())\n      .then((data) => renderJobAnalytics(data, jobData, analyticsContainer, helpers))\n      .catch((error) => {\n        console.error(error);\n        renderJobAnalytics({error: error}, jobData, analyticsContainer, helpers);\n\n        reportErrorForAnalytics('xdmod_jobs_analytics_widget_error', error);\n      });\n}\n"],
  "mappings": "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",
  "names": []
}
