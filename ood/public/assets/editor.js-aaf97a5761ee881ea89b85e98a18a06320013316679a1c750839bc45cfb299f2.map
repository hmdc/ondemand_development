{
  "version": 3,
  "sources": ["../../javascript/editor.js"],
  "sourcesContent": ["'use strict';\n\nconst KEY_PREFIX = \"ood_editor_store_\";\n\nfunction normalizeKey(key) {\n  return `${KEY_PREFIX}${key}`;\n}\n\n// Set localStorage. Adds a key prefix to reduce overlap likelihood.\nfunction setLocalStorage(key, value) {\n  localStorage.setItem(normalizeKey(key), value);\n  return null;\n}\n\n// Get localStorage. Adds a key prefix added by setter.\nfunction getLocalStorage(key) {\n  return localStorage.getItem(normalizeKey(key));\n}\n\n// Set a user preference key to a specific value.\nfunction setUserPreference(key, value) {\n  return setLocalStorage(normalizeKey(key), value);\n}\n\n// Get the current value of the key from preferences.\nfunction getUserPreference(key) {\n  return getLocalStorage(normalizeKey(key));\n}\n\njQuery(function () {\n\n  $('[data-toggle=\"tooltip\"]').tooltip();\n\n  const editorElement = document.querySelector('#editor');\n  const apiUrl = editorElement.dataset.api;\n  const filePath = editorElement.dataset.path;\n\n  // Do not load the ace editor if the element is not available\n  // ex. for directory views\n  if ($('#editor').length) {\n    $('#error').hide();\n    // Initialize the ace editor\n    const editor = ace.edit(\"editor\");\n    const loading = false;\n\n    setOptions();\n    initializeEditor();\n    setBeforeUnloadState();\n    editor.setReadOnly(false);\n\n    function initializeEditor() {\n\n      // Disables/enables the save button and binds the window popup if there are changes\n      editor.on(\"change\", function () {\n        // The dirtyCounter is an undocumented array in the UndoManager\n        // Changing the editor only modifies the dirtyCounter after the event is over,\n        // so we set it manually on change to apply the proper unload state\n        // https://github.com/ajaxorg/ace/blob/4a55188fdb0eee9e2d3854f175e67408a1e47655/lib/ace/undomanager.js#L164\n        editor.session.getUndoManager().dirtyCounter++;\n        setBeforeUnloadState();\n      });\n\n      // Mark the editor as clean after load.\n      editor.session.getUndoManager().markClean();\n\n      // Disable the save button after the initial load\n      // Modifying settings and adding data to the editor makes the UndoManager \"dirty\"\n      // so we have to explicitly re-disable it on page ready.\n      $(\"#save-button\").prop(\"disabled\", true);\n\n      // Set the caret at inside the editor on load.\n      editor.focus();\n    };\n\n    function setSaveButtonState() {\n      $(\"#save-button\").prop(\"disabled\", editor.session.getUndoManager().isClean());\n    };\n\n    function setBeforeUnloadState() {\n      if (loading) {\n        editor.session.getUndoManager().markClean();\n      };\n\n      setSaveButtonState();\n\n      window.onbeforeunload = function (e) {\n        if (!editor.session.getUndoManager().isClean()) {\n          return 'You have unsaved changes!';\n        } else {\n          // return nothing\n        };\n      };\n    };\n\n    // Toggles a spinner in place of the save icon\n    function toggleSaveSpinner() {\n      $(\"#save-icon\").toggleClass(\"glyphicon-save\");\n      $(\"#save-icon\").toggleClass(\"glyphicon-refresh\");\n      $(\"#save-icon\").toggleClass(\"glyphicon-spin\");\n    };\n\n    // Toggles a checkbox in place of the save icon\n    function toggleSaveConfirmed() {\n      $(\"#save-icon\").toggleClass(\"glyphicon-save\");\n      $(\"#save-icon\").toggleClass(\"glyphicon-saved\");\n    };\n\n    // Sets the key binding to the selected option\n    function setKeyBinding() {\n      var binding = $(\"#keybindings option:selected\").val();\n      if (binding == \"default\") {\n        binding = null;\n      }\n      editor.setKeyboardHandler(binding);\n    };\n\n    // Change the font size\n    $(\"#fontsize\").on('change', function () {\n      editor.setFontSize($(\"#fontsize option:selected\").val());\n      setUserPreference('fontsize', $(\"#fontsize option:selected\").val());\n    });\n\n    // Change the key bindings\n    $(\"#keybindings\").on('change', function () {\n      setKeyBinding();\n      setUserPreference('keybindings', $(\"#keybindings option:selected\").val());\n    });\n\n    // Change the theme\n    $(\"#theme\").on('change', function () {\n      editor.setTheme($(\"#theme option:selected\").val());\n      setUserPreference('theme', $(\"#theme option:selected\").val());\n    });\n\n    // Change the mode\n    $(\"#mode\").on('change', function () {\n      editor.getSession().setMode(\"ace/mode/\" + $(\"#mode option:selected\").val());\n      setUserPreference('mode', $(\"#mode option:selected\").val());\n    });\n\n    // Change the word wrap setting\n    $(\"#wordwrap\").on('change', function () {\n      editor.getSession().setUseWrapMode(this.checked);\n      setUserPreference('wordwrap', $(\"#wordwrap\").is(':checked'));\n    });\n\n    // Save button onclick handler\n    // sends the content to the cloudcmd api via PUT request\n    $(\"#save-button\").on('click', function () {\n      if (apiUrl !== \"\") {\n        $(\"#save-button\").prop(\"disabled\", true);\n        toggleSaveSpinner();\n        $.ajax({\n          url: apiUrl,\n          type: 'PUT',\n          data: editor.getValue(),\n          headers: {\n            'Content-Type': 'text/plain',\n            'X-CSRF-Token': $('meta[name=\"csrf-token\"]').attr('content')\n          },\n          success: function (data) {\n            toggleSaveSpinner();\n            toggleSaveConfirmed();\n            setTimeout(function () {\n              toggleSaveConfirmed();\n            }, 2000);\n\n            editor.session.getUndoManager().markClean();\n            $(\"#save-button\").prop(\"disabled\", editor.session.getUndoManager().isClean());\n            setBeforeUnloadState();\n          },\n          error: function (request, status, error) {\n            alert(\"An error occured attempting to save this file!\\n\" + error);\n            toggleSaveSpinner();\n          }\n        });\n      } else {\n        console.log(\"Can't save this!\");\n      };\n    });\n\n    // Automatically Sets the dropdown and mode to the modelist option\n    function setModeFromModelist() {\n      var modelist = ace.require(\"ace/ext/modelist\").getModeForPath(filePath);\n      $(\"#mode\").val(modelist.name);\n      editor.session.setMode(modelist.mode);\n    };\n\n\n    function setOptions() {\n      $(\"#keybindings\").val(getUserPreference('keybindings') || \"default\");\n      setKeyBinding();\n      $(\"#fontsize\").val(getUserPreference('fontsize') || '12px');\n      editor.setFontSize($(\"#fontsize option:selected\").val());\n      $(\"#mode\").val(getUserPreference('mode') || \"text\");\n      editor.session.setMode(\"ace/mode/\" + $(\"#mode option:selected\").val());\n      $(\"#theme\").val(getUserPreference('theme') || \"ace/theme/solarized_light\");\n      editor.setTheme($(\"#theme option:selected\").val());\n      $(\"#wordwrap\").prop(\"checked\", getUserPreference('wordwrap') === \"true\");\n      editor.getSession().setUseWrapMode($(\"#wordwrap\").is(':checked'));\n    };\n\n    initializeEditor();\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
