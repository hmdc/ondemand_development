{
  "version": 3,
  "sources": ["../../../javascript/path_selector/path_selector_data_table.js"],
  "sourcesContent": ["\nexport class PathSelectorTable {\n  _table = null;\n\n  // input data that should be passed into the constructor\n  tableId             = undefined;\n  filesPath           = undefined;\n  breadcrumbId        = undefined;\n  initialDirectory    = undefined;\n  selectButtonId      = undefined;\n  inputFieldId        = undefined;\n  modalId             = undefined;\n  showHidden          = undefined;\n  showFiles           = undefined;\n\n  constructor(options) {\n      this.tableId             = options.tableId;\n      this.filesPath           = options.filesPath;\n      this.breadcrumbId        = options.breadcrumbId;\n      this.initialDirectory    = options.initialDirectory;\n      this.selectButtonId      = options.selectButtonId;\n      this.inputFieldId        = options.inputFieldId;\n      this.modalId             = options.modalId;\n      this.showHidden          = options.showHidden === 'true';\n      this.showFiles           = options.showFiles === 'true';\n\n      this.initDataTable();\n      this.reloadTable(this.initialUrl());\n\n      $(`#${this.tableId} tbody`).on('click', 'tr', (event) => { this.clickRow(event) });\n      $('#favorites').on('click', 'li', (event) => { this.clickRow(event) });\n      $(`#${this.breadcrumbId}`).on('click', 'li', (event) => { this.clickBreadcrumb(event) });\n      $(`#${this.selectButtonId}`).on('click', (event) => { this.selectPath(event) });\n  }\n\n  initDataTable() {\n    this._table = $(`#${this.tableId}`).DataTable({\n      autoWidth: false,\n      language: {\n        search: 'Filter:',\n      },\n      order: [[0, \"asc\"], [1, \"asc\"]],\n      rowId: 'id',\n      paging: false,\n      scrollCollapse: true,\n      select: {\n          style: 'os',\n          className: 'selected',\n          toggleable: true,\n          // don't trigger select checkbox column as select\n          // if you need to omit more columns, use a \"selectable\" class on the columns you want to support selection\n          selector: 'td:not(:first-child)'\n      },\n      // https://datatables.net/reference/option/dom\n      // dom: '', dataTables_info nowrap\n      //\n      // put breadcrumbs below filter!!!\n      dom: \"<'row'<'col-sm-12'f>>\" + // normally <'row'<'col-sm-6'l><'col-sm-6'f>> but we disabled pagination so l is not needed (dropdown for selecting # rows)\n          \"<'row'<'col-sm-12'<'dt-status-bar'<'datatables-status float-end'><'transfers-status'>>>>\" +\n          \"<'row'<'col-sm-12'tr>>\", // normally this is <'row'<'col-sm-5'i><'col-sm-7'p>> but we disabled pagination so have info take whole row\n      columns: [\n        {\n          data: 'type',\n          render: (data, _type, _row, _meta) => data == 'd' ? '<span title=\"directory\" class=\"fa fa-folder gold\"><span class=\"sr-only\">directory</span></span>' : '<span title=\"file\" class=\"fa fa-file black\"><span class=\"sr-only\">file</span></span>'\n        },\n        {\n            name: 'name',\n            data: 'name',\n            className: 'text-break',\n            render: (data, _type, _row, _meta) => {\n                return `<span>${data}</span>`;\n            }\n\n        }\n      ],\n      createdRow: function (row, data, _dataIndex) {\n        row.classList.add('clickable');\n        row.dataset['apiUrl'] = data.url;\n        row.dataset['pathType'] = data.type;\n      },\n    });\n  }\n\n  async reloadTable(url) {\n    try {\n      $(this.tableWrapper()).hide();\n      $('#loading-icon').show();\n      const response = await fetch(url, { headers: { 'Accept': 'application/json' }, cache: 'no-store' });\n      const data = await this.dataFromJsonResponse(response);\n      $(`#${this.breadcrumbId}`).html(data.path_selector_breadcrumbs_html);\n      this._table.clear();\n      this._table.rows.add(data.files);\n      this.setLastVisited(data.path);\n      this._table.draw();\n      this.resetTable();\n    } catch (err) {\n      this.resetTable();\n      if (err.message.match(\"Permission denied\")) {\n        $('#forbidden-warning').removeClass('d-none')\n        $('#forbidden-warning').trigger('focus');\n      }\n      console.log(err);\n    }\n  }\n\n  resetTable() {\n    $('#loading-icon').hide();\n    $(this.tableWrapper()).show();\n    $('#forbidden-warning').addClass('d-none');\n  }\n\n  dataFromJsonResponse(response) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(response)\n        .then(response => response.ok ? Promise.resolve(response) : Promise.reject(new Error(response.statusText)))\n        .then(response => response.json())\n        .then(data => this.filterFileResponse(data))\n        .then(data => data.error_message ? Promise.reject(new Error(data.error_message)) : resolve(data))\n        .catch((e) => reject(e))\n    });\n  }\n\n  clickRow(event) {\n    const row = $(event.target).closest('tr').get(0) || event.target;\n    const url = row.dataset['apiUrl'];\n    const pathType = row.dataset['pathType'];\n    this.activateFavorite(row);\n\n    // only reload table for directories. and correct last visited\n    // if it's a file.\n    if(pathType == 'f') {\n      const path = url.replace(this.filesPath, '').replaceAll('//','/');\n      this.setLastVisited(path, pathType);\n    } else {\n      this.reloadTable(url);\n    }\n  }\n\n  activateFavorite(currentlyClicked) {\n    $('li.active').each((_idx, ele) => {\n      ele.classList.remove('active');\n    });\n\n    if(currentlyClicked.tagName == \"LI\") {\n      currentlyClicked.classList.add('active');\n    }\n  }\n\n  clickBreadcrumb(event) {\n    const path = event.target.id;\n    this.activateFavorite(event.target);\n    this.reloadTable(path);\n  }\n\n  selectPath(_event) {\n    const last = this.getLastVisited();\n    const inputField = document.getElementById(this.inputFieldId);\n    inputField.value = last.path;\n    $(`#${this.modalId}`).modal('hide');\n  }\n\n  storageKey() {\n    const underscore_path = window.location.pathname.replaceAll('/', '_');\n    return `${this.tableId}${underscore_path}_last_visited`;\n  }\n\n  tableWrapper() {\n    return `#${this.tableId}_wrapper`;\n  }\n\n  // note that this is storing the file system path, not the path of the URL \n  // i.e., '/home/annie' not '/pun/sys/dashboard/files/fs/home/annie'\n  getLastVisited() {\n    const lastVisited = localStorage.getItem(this.storageKey());\n    if(lastVisited === null) {\n      return { path: this.initialDirectory, type: 'd' };\n    } else {\n      return JSON.parse(lastVisited);\n    }\n  }\n\n  setLastVisited(path, pathType = 'd') {\n    const item = { path: path, type: pathType };\n    if(path) {\n      localStorage.setItem(this.storageKey(), JSON.stringify(item));\n    }\n  }\n\n  initialUrl() {\n    const last = this.getLastVisited();\n    let path = undefined;\n\n    // if the last visisted was a file, then set the initial\n    // url to the file's directory.\n    if(last.type == 'f') {\n      path = last.path.split('/').slice(0, -1).join('/');\n    } else {\n      path = last.path;\n    }\n\n    if(path.startsWith('/')) {\n      return `${this.filesPath}${path}`;\n    } else {\n      return `${this.filesPath}/${path}`;\n    }\n  }\n\n  // filter the response from the files API to remove things like hidden files/directories\n  filterFileResponse(data) {\n    const filteredFiles = data.files.filter((file) => {\n      const isHidden = file.name.startsWith('.');\n      const isFile = file.type == \"f\";\n\n      if(isHidden && isFile) {\n        return this.showHidden && this.showFiles;\n      } else if(isHidden) {\n        return this.showHidden;\n      } else if(isFile) {\n        return this.showFiles;\n      } else {\n        return true;\n      }\n    });\n\n    data.files = filteredFiles;\n    return data;\n  }\n}"],
  "mappings": "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",
  "names": ["response"]
}
