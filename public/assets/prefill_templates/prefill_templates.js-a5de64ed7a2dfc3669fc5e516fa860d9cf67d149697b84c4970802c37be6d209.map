{
  "version": 3,
  "sources": ["../../../javascript/prefill_templates/prefill_templates.js"],
  "sourcesContent": ["'use strict';\n\nconst bcPrefix = 'batch_connect_session_context';\nconst templateSelectId = 'batch_connect_session_prefill_template';\n\nexport function prefillTemplatesHandler() {\n  const picker = $(`#${templateSelectId}`);\n  if (picker.length == 0) { return; }\n\n  picker.on('change', function () {\n    const templateOption = $(`#${templateSelectId} option:selected`);\n    if (!templateOption.val()) { return; }\n\n    let json;\n    try {\n      json = JSON.parse(templateOption.val());\n    } catch (error) {\n      $('#batch_connect_session_template_form_error_modal').text(error.message)\n      $('#batch_connect_session_template_form_error_modal_body').modal('show');\n      return;\n    }\n\n    let errorMsg = '';\n    for (const [key, value] of Object.entries(json)) {\n      let element = $(`#${bcPrefix}_${key}`);\n\n      if (element.length == 0) {\n        // For radio buttons\n        if (/^\\d+$/.test(value)) {\n          element = $(`#${bcPrefix}_${key}_${value}`);\n        } else {\n          continue;\n        }\n      }\n\n      if (element.is('select') && value !== '') {\n        // Ensure that the option exists\n        if (element.find(`option[value=\"${value}\"]`).length == 0) {\n          errorMsg += `Invalid value: \"${value}\" for the field \"${key}\".<br>`;\n          continue;\n        }\n      }\n\n      switch (element.attr('type')) {\n        case \"checkbox\":\n          value === \"1\" ? element.prop('checked', true) : element.prop('checked', false);\n          break;\n\n        case \"radio\":\n          element.filter(`[value=\"${value}\"]`).prop('checked', true);\n\n        default:\n          element.val(value);\n          break;\n      }\n      element.trigger('change');\n    }\n\n    if (errorMsg) {\n      $('#batch_connect_session_template_form_error_modal_body').html(errorMsg)\n      $('#batch_connect_session_template_form_error_modal').modal('show');\n    }\n  });\n}\n"],
  "mappings": ";AAEA,IAAM,WAAW;AACjB,IAAM,mBAAmB;AAElB,SAAS,0BAA0B;AACxC,QAAM,SAAS,EAAE,IAAI,kBAAkB;AACvC,MAAI,OAAO,UAAU,GAAG;AAAE;AAAA,EAAQ;AAElC,SAAO,GAAG,UAAU,WAAY;AAC9B,UAAM,iBAAiB,EAAE,IAAI,kCAAkC;AAC/D,QAAI,CAAC,eAAe,IAAI,GAAG;AAAE;AAAA,IAAQ;AAErC,QAAI;AACJ,QAAI;AACF,aAAO,KAAK,MAAM,eAAe,IAAI,CAAC;AAAA,IACxC,SAAS,OAAP;AACA,QAAE,kDAAkD,EAAE,KAAK,MAAM,OAAO;AACxE,QAAE,uDAAuD,EAAE,MAAM,MAAM;AACvE;AAAA,IACF;AAEA,QAAI,WAAW;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,IAAI,GAAG;AAC/C,UAAI,UAAU,EAAE,IAAI,YAAY,KAAK;AAErC,UAAI,QAAQ,UAAU,GAAG;AAEvB,YAAI,QAAQ,KAAK,KAAK,GAAG;AACvB,oBAAU,EAAE,IAAI,YAAY,OAAO,OAAO;AAAA,QAC5C,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,UAAI,QAAQ,GAAG,QAAQ,KAAK,UAAU,IAAI;AAExC,YAAI,QAAQ,KAAK,iBAAiB,SAAS,EAAE,UAAU,GAAG;AACxD,sBAAY,mBAAmB,yBAAyB;AACxD;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,QAAQ,KAAK,MAAM;AAAA,aACpB;AACH,oBAAU,MAAM,QAAQ,KAAK,WAAW,IAAI,IAAI,QAAQ,KAAK,WAAW,KAAK;AAC7E;AAAA,aAEG;AACH,kBAAQ,OAAO,WAAW,SAAS,EAAE,KAAK,WAAW,IAAI;AAAA;AAGzD,kBAAQ,IAAI,KAAK;AACjB;AAAA;AAEJ,cAAQ,QAAQ,QAAQ;AAAA,IAC1B;AAEA,QAAI,UAAU;AACZ,QAAE,uDAAuD,EAAE,KAAK,QAAQ;AACxE,QAAE,kDAAkD,EAAE,MAAM,MAAM;AAAA,IACpE;AAAA,EACF,CAAC;AACH;",
  "names": []
}
