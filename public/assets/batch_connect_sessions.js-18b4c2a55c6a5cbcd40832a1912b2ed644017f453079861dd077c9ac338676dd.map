{
  "version": 3,
  "sources": ["../../javascript/config.js", "../../javascript/utils.js", "../../javascript/turbo_shim.js", "../../javascript/batch_connect_sessions.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n", "\n/*\n  While we want Turbo enabled at some point,\n  it doesn't really work well yet. So, we'll provide\n  this shim until we enable it.\n*/\n\nexport function replaceHTML(id, html) {\n  const ele = document.getElementById(id);\n\n  if(ele == null){\n    return;\n  } else {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    const newHTML = tmp.querySelector('template').innerHTML;\n    tmp.remove();\n\n    ele.innerHTML = newHTML;\n  }\n}\n\nexport function pollAndReplace(url, delay, id, callback) {\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => replaceHTML(id, html))\n    .then(() => {\n      setTimeout(pollAndReplace, delay, url, delay, id, callback);\n      if (typeof callback == 'function') {\n        callback();\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot retrieve partial due to error:');\n      console.log(err);\n    });\n}\n", "'use strict';\n\nimport { bcIndexUrl, bcPollDelay } from './config';\nimport { bindFullPageSpinnerEvent } from './utils';\nimport { pollAndReplace } from './turbo_shim';\n\nfunction settingKey(id) {\n  return id + '_value';\n}\n\nfunction storeSetting(event) {\n  var key = settingKey(event.currentTarget.id);\n  var value = event.currentTarget.value;\n\n  localStorage.setItem(key, value);\n}\n\nfunction tryUpdateSetting(name) {\n  var saved_value = localStorage.getItem(settingKey(name));\n\n  if(saved_value) {\n    var selector = 'input[type=\"range\"][name=\"' + name + '\"]';\n    $(selector).val(saved_value);\n  }\n}\n\nfunction installSettingHandlers(name) {\n  var selector = 'input[type=\"range\"][name=\"' + name + '\"]';\n  $(selector).on('change', function(event){\n    storeSetting(event);\n  });\n}\n\nwindow.installSettingHandlers = installSettingHandlers;\nwindow.tryUpdateSetting = tryUpdateSetting;\n\njQuery(function (){\n  if ($('#batch_connect_sessions').length) {\n    pollAndReplace(bcIndexUrl(), bcPollDelay(), \"batch_connect_sessions\", bindFullPageSpinnerEvent);\n  }\n});\n"],
  "mappings": ";AAAA;AAEA,IAAM,YAAY;AAEX,SAAS,aAAa;AAC3B,SAAO,SAAS,eAAe,SAAS,EAAE;AAC5C;AAiEO,SAAS,cAAc;AAC5B,QAAM,UAAU,WAAW;AAC3B,SAAO,OAAO,QAAQ,cAAc;AACtC;AAEO,SAAS,aAAa;AAC3B,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ;AACjB;;;ACpCA,SAAS,cAAc;AACrB,IAAE,MAAM,EAAE,SAAS,YAAY;AAC/B,IAAE,oBAAoB,EAAE,YAAY,QAAQ;AAC9C;AAEO,SAAS,2BAA2B;AACzC,IAAE,oBAAoB,EAAE,KAAK,CAAC,OAAO,YAAY;AAC/C,UAAM,WAAW,EAAE,OAAO;AAC1B,QAAG,SAAS,GAAG,GAAG,GAAG;AACnB,eAAS,GAAG,SAAS,WAAW;AAAA,IAClC,OAAO;AACL,eAAS,QAAQ,MAAM,EAAE,GAAG,UAAU,WAAW;AAAA,IACnD;AAAA,EACF,CAAC;AACH;;;AClDO,SAAS,YAAY,IAAI,MAAM;AACpC,QAAM,MAAM,SAAS,eAAe,EAAE;AAEtC,MAAG,OAAO,MAAK;AACb;AAAA,EACF,OAAO;AACL,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,YAAY;AAChB,UAAM,UAAU,IAAI,cAAc,UAAU,EAAE;AAC9C,QAAI,OAAO;AAEX,QAAI,YAAY;AAAA,EAClB;AACF;AAEO,SAAS,eAAe,KAAK,OAAO,IAAI,UAAU;AACvD,QAAM,KAAK,EAAE,SAAS,EAAE,QAAQ,6BAA6B,EAAE,CAAC,EAC7D,KAAK,cAAY,SAAS,KAAK,QAAQ,QAAQ,QAAQ,IAAI,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC,EAC1F,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EACpB,KAAK,CAAC,SAAS,YAAY,IAAI,IAAI,CAAC,EACpC,KAAK,MAAM;AACV,eAAW,gBAAgB,OAAO,KAAK,OAAO,IAAI,QAAQ;AAC1D,QAAI,OAAO,YAAY,YAAY;AACjC,eAAS;AAAA,IACX;AAAA,EACF,CAAC,EACA,MAAM,CAAC,QAAQ;AACd,YAAQ,IAAI,uCAAuC;AACnD,YAAQ,IAAI,GAAG;AAAA,EACjB,CAAC;AACL;;;AC/BA,SAAS,WAAW,IAAI;AACtB,SAAO,KAAK;AACd;AAEA,SAAS,aAAa,OAAO;AAC3B,MAAI,MAAM,WAAW,MAAM,cAAc,EAAE;AAC3C,MAAI,QAAQ,MAAM,cAAc;AAEhC,eAAa,QAAQ,KAAK,KAAK;AACjC;AAEA,SAAS,iBAAiB,MAAM;AAC9B,MAAI,cAAc,aAAa,QAAQ,WAAW,IAAI,CAAC;AAEvD,MAAG,aAAa;AACd,QAAI,WAAW,+BAA+B,OAAO;AACrD,MAAE,QAAQ,EAAE,IAAI,WAAW;AAAA,EAC7B;AACF;AAEA,SAAS,uBAAuB,MAAM;AACpC,MAAI,WAAW,+BAA+B,OAAO;AACrD,IAAE,QAAQ,EAAE,GAAG,UAAU,SAAS,OAAM;AACtC,iBAAa,KAAK;AAAA,EACpB,CAAC;AACH;AAEA,OAAO,yBAAyB;AAChC,OAAO,mBAAmB;AAE1B,OAAO,WAAW;AAChB,MAAI,EAAE,yBAAyB,EAAE,QAAQ;AACvC,mBAAe,WAAW,GAAG,YAAY,GAAG,0BAA0B,wBAAwB;AAAA,EAChG;AACF,CAAC;",
  "names": []
}
