{
  "version": 3,
  "sources": ["../../javascript/config.js", "../../javascript/turbo_shim.js", "../../javascript/system_status.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function jobsInfoPath(){\n  const cfgData = configData();\n  return cfgData['jobsInfoPath'];\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}", "\n/*\n  While we want Turbo enabled at some point,\n  it doesn't really work well yet. So, we'll provide\n  this shim until we enable it.\n*/\n\nexport function replaceHTML(id, html) {\n  const ele = document.getElementById(id);\n\n  if(ele == null){\n    return;\n  } else {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    const newHTML = tmp.querySelector('template').innerHTML;\n    tmp.remove();\n\n    ele.innerHTML = newHTML;\n  }\n}\n\nexport function pollAndReplace(url, delay, id, callback) {\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => replaceHTML(id, html))\n    .then(() => {\n      setTimeout(pollAndReplace, delay, url, delay, id, callback);\n      if (typeof callback == 'function') {\n        callback();\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot retrieve partial due to error:');\n      console.log(err);\n    });\n}\n", "import { statusIndexUrl, statusPollDelay } from './config'\nimport { pollAndReplace } from './turbo_shim'\n\njQuery(() => {\n  pollAndReplace(statusIndexUrl(), statusPollDelay(), \"system-status\");\n});"],
  "mappings": ";AAAA;AAEA,IAAM,YAAY;AAEX,SAAS,aAAa;AAC3B,SAAO,SAAS,eAAe,SAAS,EAAE;AAC5C;AAqEO,SAAS,kBAAkB;AAChC,QAAM,UAAU,WAAW;AAC3B,SAAO,OAAO,QAAQ,kBAAkB;AAC1C;AAEO,SAAS,iBAAiB;AAC/B,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ;AACjB;;;AC5EO,SAAS,YAAY,IAAI,MAAM;AACpC,QAAM,MAAM,SAAS,eAAe,EAAE;AAEtC,MAAG,OAAO,MAAK;AACb;AAAA,EACF,OAAO;AACL,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,YAAY;AAChB,UAAM,UAAU,IAAI,cAAc,UAAU,EAAE;AAC9C,QAAI,OAAO;AAEX,QAAI,YAAY;AAAA,EAClB;AACF;AAEO,SAAS,eAAe,KAAK,OAAO,IAAI,UAAU;AACvD,QAAM,KAAK,EAAE,SAAS,EAAE,QAAQ,6BAA6B,EAAE,CAAC,EAC7D,KAAK,cAAY,SAAS,KAAK,QAAQ,QAAQ,QAAQ,IAAI,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC,EAC1F,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EACpB,KAAK,CAAC,SAAS,YAAY,IAAI,IAAI,CAAC,EACpC,KAAK,MAAM;AACV,eAAW,gBAAgB,OAAO,KAAK,OAAO,IAAI,QAAQ;AAC1D,QAAI,OAAO,YAAY,YAAY;AACjC,eAAS;AAAA,IACX;AAAA,EACF,CAAC,EACA,MAAM,CAAC,QAAQ;AACd,YAAQ,IAAI,uCAAuC;AACnD,YAAQ,IAAI,GAAG;AAAA,EACjB,CAAC;AACL;;;AClCA,OAAO,MAAM;AACX,iBAAe,eAAe,GAAG,gBAAgB,GAAG,eAAe;AACrE,CAAC;",
  "names": []
}
