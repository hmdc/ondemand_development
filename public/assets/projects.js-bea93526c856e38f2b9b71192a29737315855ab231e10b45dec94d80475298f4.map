{
  "version": 3,
  "sources": ["../../javascript/config.js", "../../javascript/turbo_shim.js", "../../javascript/projects.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "\n/*\n  While we want Turbo enabled at some point,\n  it doesn't really work well yet. So, we'll provide\n  this shim until we enable it.\n*/\n\nexport function replaceHTML(id, html) {\n  const ele = document.getElementById(id);\n\n  if(ele == null){\n    return;\n  } else {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    const newHTML = tmp.querySelector('template').innerHTML;\n    tmp.remove();\n\n    ele.innerHTML = newHTML;\n  }\n}\n\nexport function pollAndReplace(url, delay, id, callback) {\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => replaceHTML(id, html))\n    .then(() => {\n      setTimeout(pollAndReplace, delay, url, delay, id, callback);\n      if (typeof callback == 'function') {\n        callback();\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot retrieve partial due to error:');\n      console.log(err);\n    });\n}\n", "import { rootPath } from './config.js';\nimport { replaceHTML } from './turbo_shim';\n\n\njQuery(function() {\n  $('[data-job-poller=\"true\"]').each((_index, ele) => {\n    pollForJobInfo(ele);\n  });\n\n  $(\"[data-bs-toggle='project']\").each((_index, ele) => {\n    updateProjectSize(ele);\n  });\n});\n\nfunction jobDetailsPath(cluster, jobId) {\n  const baseUrl = rootPath();\n  const config = document.getElementById('project_config');\n  const projectId = config.dataset['projectId'];\n\n  return `${baseUrl}/projects/${projectId}/jobs/${cluster}/${jobId}`;\n}\n\nfunction pollForJobInfo(element) {\n  const cluster = element.dataset['jobCluster'];\n  const jobId = element.dataset['jobId'];\n\n  if(cluster === undefined || jobId === undefined){ return; }\n\n  const url = jobDetailsPath(cluster, jobId);\n\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => replaceHTML(element.id, html))\n    .then(setTimeout(pollForJobInfo, 30000, element))\n    .catch((err) => {\n      console.log('Cannot not retrive job details due to error:');\n      console.log(err);\n    });\n}\n\n\n\nfunction updateProjectSize(element) {\n  const UNDETERMINED = 'Undetermined Size';\n  const $container = $(element);\n\n  const projectPath = $container.data('url');\n  $.ajax({\n    url: projectPath,\n    type: 'GET',\n    headers: {\n      'Accept': 'application/json'\n    },\n    success: function (projectData) {\n      const projectSize = projectData.size === 0 ? UNDETERMINED : projectData.human_size;\n      $container.text(`(${projectSize})`);\n    },\n    error: function (request, status, error) {\n      console.log(\"An error occurred getting project size!\\n\" + error);\n      $container.text(`(${UNDETERMINED})`);\n    }\n  });\n}\n"],
  "mappings": ";AAAA;AAEA,IAAM,YAAY;AAEX,SAAS,aAAa;AAC3B,SAAO,SAAS,eAAe,SAAS,EAAE;AAC5C;AAuBO,SAAS,WAAU;AACxB,QAAM,UAAU,WAAW;AAC3B,QAAMA,YAAW,QAAQ;AACzB,MAAGA,aAAY,KAAK;AAClB,WAAOA;AAAA,EACT,OAAO;AAEL,WAAOA,UAAS,UAAU,GAAGA,UAAS,SAAO,CAAC;AAAA,EAChD;AACF;;;AC/BO,SAAS,YAAY,IAAI,MAAM;AACpC,QAAM,MAAM,SAAS,eAAe,EAAE;AAEtC,MAAG,OAAO,MAAK;AACb;AAAA,EACF,OAAO;AACL,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,YAAY;AAChB,UAAM,UAAU,IAAI,cAAc,UAAU,EAAE;AAC9C,QAAI,OAAO;AAEX,QAAI,YAAY;AAAA,EAClB;AACF;;;AChBA,OAAO,WAAW;AAChB,IAAE,0BAA0B,EAAE,KAAK,CAAC,QAAQ,QAAQ;AAClD,mBAAe,GAAG;AAAA,EACpB,CAAC;AAED,IAAE,4BAA4B,EAAE,KAAK,CAAC,QAAQ,QAAQ;AACpD,sBAAkB,GAAG;AAAA,EACvB,CAAC;AACH,CAAC;AAED,SAAS,eAAe,SAAS,OAAO;AACtC,QAAM,UAAU,SAAS;AACzB,QAAM,SAAS,SAAS,eAAe,gBAAgB;AACvD,QAAM,YAAY,OAAO,QAAQ;AAEjC,SAAO,GAAG,oBAAoB,kBAAkB,WAAW;AAC7D;AAEA,SAAS,eAAe,SAAS;AAC/B,QAAM,UAAU,QAAQ,QAAQ;AAChC,QAAM,QAAQ,QAAQ,QAAQ;AAE9B,MAAG,YAAY,UAAa,UAAU,QAAU;AAAE;AAAA,EAAQ;AAE1D,QAAM,MAAM,eAAe,SAAS,KAAK;AAEzC,QAAM,KAAK,EAAE,SAAS,EAAE,QAAQ,6BAA6B,EAAE,CAAC,EAC7D,KAAK,cAAY,SAAS,KAAK,QAAQ,QAAQ,QAAQ,IAAI,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAC,EAC1F,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EACpB,KAAK,CAAC,SAAS,YAAY,QAAQ,IAAI,IAAI,CAAC,EAC5C,KAAK,WAAW,gBAAgB,KAAO,OAAO,CAAC,EAC/C,MAAM,CAAC,QAAQ;AACd,YAAQ,IAAI,8CAA8C;AAC1D,YAAQ,IAAI,GAAG;AAAA,EACjB,CAAC;AACL;AAIA,SAAS,kBAAkB,SAAS;AAClC,QAAM,eAAe;AACrB,QAAM,aAAa,EAAE,OAAO;AAE5B,QAAM,cAAc,WAAW,KAAK,KAAK;AACzC,IAAE,KAAK;AAAA,IACL,KAAK;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,SAAS,SAAU,aAAa;AAC9B,YAAM,cAAc,YAAY,SAAS,IAAI,eAAe,YAAY;AACxE,iBAAW,KAAK,IAAI,cAAc;AAAA,IACpC;AAAA,IACA,OAAO,SAAU,SAAS,QAAQ,OAAO;AACvC,cAAQ,IAAI,8CAA8C,KAAK;AAC/D,iBAAW,KAAK,IAAI,eAAe;AAAA,IACrC;AAAA,EACF,CAAC;AACH;",
  "names": ["rootPath"]
}
