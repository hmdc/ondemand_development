{
  "version": 3,
  "sources": ["../../javascript/path_selector/path_selector_data_table.js", "../../javascript/path_selector/path_selector.js", "../../javascript/prefill_templates/prefill_templates.js", "../../javascript/prefill_templates/prefill_submit.js", "../../javascript/config.js", "../../javascript/dynamic_forms.js", "../../javascript/batch_connect_session_contexts.js"],
  "sourcesContent": ["\nexport class PathSelectorTable {\n  _table = null;\n\n  // input data that should be passed into the constructor\n  tableId             = undefined;\n  filesPath           = undefined;\n  breadcrumbId        = undefined;\n  initialDirectory    = undefined;\n  selectButtonId      = undefined;\n  inputFieldId        = undefined;\n  modalId             = undefined;\n  showHidden          = undefined;\n  showFiles           = undefined;\n\n  constructor(options) {\n      this.tableId             = options.tableId;\n      this.filesPath           = options.filesPath;\n      this.breadcrumbId        = options.breadcrumbId;\n      this.initialDirectory    = options.initialDirectory;\n      this.selectButtonId      = options.selectButtonId;\n      this.inputFieldId        = options.inputFieldId;\n      this.modalId             = options.modalId;\n      this.showHidden          = options.showHidden === 'true';\n      this.showFiles           = options.showFiles === 'true';\n\n      this.initDataTable();\n      this.reloadTable(this.initialUrl());\n\n      $(`#${this.tableId} tbody`).on('click', 'tr', (event) => { this.clickRow(event) });\n      $('#favorites').on('click', 'li', (event) => { this.clickRow(event) });\n      $(`#${this.breadcrumbId}`).on('click', 'li', (event) => { this.clickBreadcrumb(event) });\n      $(`#${this.selectButtonId}`).on('click', (event) => { this.selectPath(event) });\n  }\n\n  initDataTable() {\n    this._table = $(`#${this.tableId}`).DataTable({\n      autoWidth: false,\n      language: {\n        search: 'Filter:',\n      },\n      order: [[0, \"asc\"], [1, \"asc\"]],\n      rowId: 'id',\n      paging: false,\n      scrollCollapse: true,\n      select: {\n          style: 'os',\n          className: 'selected',\n          toggleable: true,\n          // don't trigger select checkbox column as select\n          // if you need to omit more columns, use a \"selectable\" class on the columns you want to support selection\n          selector: 'td:not(:first-child)'\n      },\n      // https://datatables.net/reference/option/dom\n      // dom: '', dataTables_info nowrap\n      //\n      // put breadcrumbs below filter!!!\n      dom: \"<'row'<'col-sm-12'f>>\" + // normally <'row'<'col-sm-6'l><'col-sm-6'f>> but we disabled pagination so l is not needed (dropdown for selecting # rows)\n          \"<'row'<'col-sm-12'<'dt-status-bar'<'datatables-status float-end'><'transfers-status'>>>>\" +\n          \"<'row'<'col-sm-12'tr>>\", // normally this is <'row'<'col-sm-5'i><'col-sm-7'p>> but we disabled pagination so have info take whole row\n      columns: [\n        {\n          data: 'type',\n          render: (data, _type, _row, _meta) => data == 'd' ? '<span title=\"directory\" class=\"fa fa-folder gold\"><span class=\"sr-only\">directory</span></span>' : '<span title=\"file\" class=\"fa fa-file black\"><span class=\"sr-only\">file</span></span>'\n        },\n        {\n            name: 'name',\n            data: 'name',\n            className: 'text-break',\n            render: (data, _type, _row, _meta) => {\n                return `<span>${data}</span>`;\n            }\n\n        }\n      ],\n      createdRow: function (row, data, _dataIndex) {\n        row.classList.add('clickable');\n        row.dataset['apiUrl'] = data.url;\n        row.dataset['pathType'] = data.type;\n      },\n    });\n  }\n\n  async reloadTable(url) {\n    try {\n      $(this.tableWrapper()).hide();\n      $('#loading-icon').show();\n      const response = await fetch(url, { headers: { 'Accept': 'application/json' }, cache: 'no-store' });\n      const data = await this.dataFromJsonResponse(response);\n      $(`#${this.breadcrumbId}`).html(data.path_selector_breadcrumbs_html);\n      this._table.clear();\n      this._table.rows.add(data.files);\n      this.setLastVisited(data.path);\n      this._table.draw();\n      this.resetTable();\n    } catch (err) {\n      this.resetTable();\n      if (err.message.match(\"Permission denied\")) {\n        $('#forbidden-warning').removeClass('d-none')\n        $('#forbidden-warning').trigger('focus');\n      }\n      console.log(err);\n    }\n  }\n\n  resetTable() {\n    $('#loading-icon').hide();\n    $(this.tableWrapper()).show();\n    $('#forbidden-warning').addClass('d-none');\n  }\n\n  dataFromJsonResponse(response) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(response)\n        .then(response => response.ok ? Promise.resolve(response) : Promise.reject(new Error(response.statusText)))\n        .then(response => response.json())\n        .then(data => this.filterFileResponse(data))\n        .then(data => data.error_message ? Promise.reject(new Error(data.error_message)) : resolve(data))\n        .catch((e) => reject(e))\n    });\n  }\n\n  clickRow(event) {\n    const row = $(event.target).closest('tr').get(0) || event.target;\n    const url = row.dataset['apiUrl'];\n    const pathType = row.dataset['pathType'];\n    this.activateFavorite(row);\n\n    // only reload table for directories. and correct last visited\n    // if it's a file.\n    if(pathType == 'f') {\n      const path = url.replace(this.filesPath, '').replaceAll('//','/');\n      this.setLastVisited(path, pathType);\n    } else {\n      this.reloadTable(url);\n    }\n  }\n\n  activateFavorite(currentlyClicked) {\n    $('li.active').each((_idx, ele) => {\n      ele.classList.remove('active');\n    });\n\n    if(currentlyClicked.tagName == \"LI\") {\n      currentlyClicked.classList.add('active');\n    }\n  }\n\n  clickBreadcrumb(event) {\n    const path = event.target.id;\n    this.activateFavorite(event.target);\n    this.reloadTable(path);\n  }\n\n  selectPath(_event) {\n    const last = this.getLastVisited();\n    const inputField = document.getElementById(this.inputFieldId);\n    inputField.value = last.path;\n    $(`#${this.modalId}`).modal('hide');\n  }\n\n  storageKey() {\n    const underscore_path = window.location.pathname.replaceAll('/', '_');\n    return `${this.tableId}${underscore_path}_last_visited`;\n  }\n\n  tableWrapper() {\n    return `#${this.tableId}_wrapper`;\n  }\n\n  // note that this is storing the file system path, not the path of the URL \n  // i.e., '/home/annie' not '/pun/sys/dashboard/files/fs/home/annie'\n  getLastVisited() {\n    const lastVisited = localStorage.getItem(this.storageKey());\n    if(lastVisited === null) {\n      return { path: this.initialDirectory, type: 'd' };\n    } else {\n      return JSON.parse(lastVisited);\n    }\n  }\n\n  setLastVisited(path, pathType = 'd') {\n    const item = { path: path, type: pathType };\n    if(path) {\n      localStorage.setItem(this.storageKey(), JSON.stringify(item));\n    }\n  }\n\n  initialUrl() {\n    const last = this.getLastVisited();\n    let path = undefined;\n\n    // if the last visisted was a file, then set the initial\n    // url to the file's directory.\n    if(last.type == 'f') {\n      path = last.path.split('/').slice(0, -1).join('/');\n    } else {\n      path = last.path;\n    }\n\n    if(path.startsWith('/')) {\n      return `${this.filesPath}${path}`;\n    } else {\n      return `${this.filesPath}/${path}`;\n    }\n  }\n\n  // filter the response from the files API to remove things like hidden files/directories\n  filterFileResponse(data) {\n    const filteredFiles = data.files.filter((file) => {\n      const isHidden = file.name.startsWith('.');\n      const isFile = file.type == \"f\";\n\n      if(isHidden && isFile) {\n        return this.showHidden && this.showFiles;\n      } else if(isHidden) {\n        return this.showHidden;\n      } else if(isFile) {\n        return this.showFiles;\n      } else {\n        return true;\n      }\n    });\n\n    data.files = filteredFiles;\n    return data;\n  }\n}", "'use strict';\n\nimport { PathSelectorTable } from \"./path_selector_data_table\";\n\nexport function attachPathSelectors() {\n  $(\"[data-path-selector='true']\").each((_idx, element) => {\n    const query = `#${pathSelectorId(element.id)}`;\n    const modal = $(query).get(0);\n\n    makeTable(modal);\n  });  \n}\n\nfunction pathSelectorId(id) {\n  return `${id}_path_selector`;\n}\n\nfunction makeTable(element) {\n  const options = getPathSelectorOptions(element);\n  new PathSelectorTable(options);\n}\n\nfunction getPathSelectorOptions(element) {\n  options = {};\n\n  options.filesPath           = element.dataset['filesPath'];\n  options.initialDirectory    = element.dataset['initialDirectory'];\n  options.tableId             = element.dataset['tableId'];\n  options.breadcrumbId        = element.dataset['breadcrumbId'];\n  options.selectButtonId      = element.dataset['selectButtonId'];\n  options.inputFieldId        = element.dataset['inputFieldId'];\n  options.showFiles           = element.dataset['showFiles'];\n  options.showHidden          = element.dataset['showHidden'];\n  options.modalId             = element.id;\n\n  return options;\n}\n", "'use strict';\n\nconst bcPrefix = 'batch_connect_session_context';\nconst templateSelectId = 'batch_connect_session_prefill_template';\n\nexport function prefillTemplatesHandler() {\n  const picker = $(`#${templateSelectId}`);\n  if (picker.length == 0) { return; }\n\n  picker.on('change', function () {\n    const templateOption = $(`#${templateSelectId} option:selected`);\n    if (!templateOption.val()) { return; }\n\n    let json;\n    try {\n      json = JSON.parse(templateOption.val());\n    } catch (error) {\n      $('#batch_connect_session_template_form_error_modal').text(error.message)\n      $('#batch_connect_session_template_form_error_modal_body').modal('show');\n      return;\n    }\n\n    let errorMsg = '';\n    for (const [key, value] of Object.entries(json)) {\n      let element = $(`#${bcPrefix}_${key}`);\n\n      if (element.length == 0) {\n        // For radio buttons\n        if (/^\\d+$/.test(value)) {\n          element = $(`#${bcPrefix}_${key}_${value}`);\n        } else {\n          continue;\n        }\n      }\n\n      if (element.is('select') && value !== '') {\n        // Ensure that the option exists\n        if (element.find(`option[value=\"${value}\"]`).length == 0) {\n          errorMsg += `Invalid value: \"${value}\" for the field \"${key}\".<br>`;\n          continue;\n        }\n      }\n\n      switch (element.attr('type')) {\n        case \"checkbox\":\n          value === \"1\" ? element.prop('checked', true) : element.prop('checked', false);\n          break;\n\n        case \"radio\":\n          element.filter(`[value=\"${value}\"]`).prop('checked', true);\n\n        default:\n          element.val(value);\n          break;\n      }\n      element.trigger('change');\n    }\n\n    if (errorMsg) {\n      $('#batch_connect_session_template_form_error_modal_body').html(errorMsg)\n      $('#batch_connect_session_template_form_error_modal').modal('show');\n    }\n  });\n}\n", "'use strict';\n\nconst selectorID = \"modal_input_template_name\";\nconst newNameID = \"modal_input_template_new_name\";\n\nexport function prefillSubmitHandler() {\n\n  const chooseTemplateName = $(\"#chooseTemplateName\");\n  if (chooseTemplateName.length === 0) {\n    return;\n  }\n\n  const chooseTemplateNameError = $(\"#batch_connect_session_template_name_error_modal\");\n  const templateName = $(\"#batch_connect_session_template_name\");\n  const saveTemplate = $(\"#batch_connect_session_save_template\");\n  const saveSubmit = $(\"#batch_connect_session_save_template_submit\");\n\n  $(`#${selectorID}`).on(\"change\", function () {\n    const newName = $(`#${newNameID}`);\n    if ($(this).val() === \"\") {\n      newName.show();\n    } else {\n      newName.hide();\n    }\n  });\n\n  $(\"#batch_connect_session_template_choose_name_button\").on(\"click\", function () {\n    const name = $(`#${selectorID}`).val() || $(`#${newNameID}`).val();\n    if (name === \"\") {\n      chooseTemplateNameError.modal('show');\n      return;\n    }\n\n    chooseTemplateNameError.modal('hide');\n    templateName.val(name);\n    chooseTemplateName.modal('hide');\n    saveSubmit.prop(\"disabled\", false);\n  });\n\n  saveTemplate.on('change', function () {\n    if ($(this).is(':checked')) {\n      chooseTemplateName.modal('show');\n    } else {\n      templateName.val(\"\");\n      $(`#${selectorID}`).val(\"\")\n      const newName = $(`#${newNameID}`);\n      newName.val(\"\");\n      newName.show();\n      saveSubmit.prop(\"disabled\", true);\n    }\n  });\n\n  chooseTemplateName.on('hidden.bs.modal', function () {\n    if (templateName.val() === \"\") {\n      saveTemplate.prop('checked', false);\n      saveTemplate.trigger('change');\n    }\n  });\n}\n", "'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "'use strict';\n\n// these are initialized in makeChangeHandlers\nvar idPrefix = undefined;\nvar shortNameRex = undefined;\n\n// @example ['NodeType', 'Cluster']\nconst formTokens = [];\n\n// simple lookup table to indicate that the change handler is setup between two\n// elements. I.e., {'cluster': [ 'node_type' ] } means that changes to cluster\n// trigger changes to node_type\nconst optionForHandlerCache = {};\n\n\n// simples array of string ids for elements that have a handler\nconst minMaxHandlerCache = [];\nconst setHandlerCache = [];\n// hide handler cache is a map in the form '{ from: [hideThing1, hideThing2] }'\nconst hideHandlerCache = {};\nconst labelHandlerCache = {};\n\n// Lookup tables for setting min & max values\n// for different directives.\nconst minMaxLookup = {};\nconst setValueLookup = {};\nconst hideLookup = {};\nconst labelLookup = {};\n\n// the regular expression for mountain casing\nconst mcRex = /[-_]([a-z])|([_-][0-9])|([\\/])/g;\n\n// whether we're still initializing or not\nlet initializing = true;\n\nfunction idWithPrefix(name) {\n  return `${idPrefix}_${name.toLowerCase()}`;\n};\n\n// here the simple name for 'batch_connect_session_context_cluster'\n// is just 'cluster'.\nfunction shortId(elementId) {\n  const match = elementId.match(shortNameRex);\n\n  if (match.length >= 1) {\n    return match[1];\n  } else {\n    return '';\n  };\n};\n\n/**\n * Mountain case the words from a string, by tokenizing on [-_].  In the\n * simplest case it just capitalizes.\n *\n * There is a special case where seperators are followed numbers. In this case\n * The seperator is kept as a hyphen because that's how jQuery expects it.\n *\n * @param      {string}  str     The word string to mountain case\n *\n * @example  given 'foo' this returns 'Foo'\n * @example  given 'foo-bar' this returns 'FooBar'\n * @example  given 'physics_1234' this returns 'Physics-1234'\n */\n// Convert dashed to camelCase\nfunction mountainCaseWords(str) {\n  const lower = str.toLowerCase();\n  const first = lower.charAt(0).toUpperCase();\n  const rest = lower.slice(1).replace(mcRex, function(_all, letter, prefixedNumber, slash) {\n    if(letter){\n      return letter.toUpperCase();\n    }else if(prefixedNumber){\n      return prefixedNumber.replace('_','-');\n    }else if(slash){\n      return '_';\n    }\n  });\n\n  return  `${first}${rest}`;\n}\n\n/**\n * Format passed string to snake_case. All characters become lowercase. Existing\n * underscores are unchanged and dashes become underscores. Underscores are added \n * before locations where an uppercase character is followed by a lowercase character.\n *\n * @param      {string}  str     The word string to snake case\n *\n * @example  given 'MountainCase' this returns 'mountain_case'\n * @example  given 'camelCase' this returns 'camel_case'\n * @example  given 'OSC_JUPYTER' this returns 'osc_jupyter'\n */\nfunction snakeCaseWords(str) {\n  if(str === undefined) return undefined;\n\n  // find all the captial case words and if none are found, we'll just bascially\n  // return the same string.\n  const rex = /([A-Z]{1}[a-z]*[0-9]*)|.+/g;\n  const words = str.match(rex);\n\n  // filter out emtpy matches to avoid having a _ at the end.\n  return words.filter(word => word != '').map(word => word.toLowerCase()).join('_');\n}\n\n/**\n *\n * @param {Array} elements\n */\nfunction memorizeElements(elements) {\n  elements.each((_i, ele) => {\n    formTokens.push(mountainCaseWords(shortId(ele['id'])));\n    optionForHandlerCache[ele['id']] = [];\n  });\n};\n\nfunction makeChangeHandlers(prefix){\n\n  // initialize some global variables.\n  idPrefix = prefix;\n  shortNameRex = new RegExp(`${idPrefix}_([\\\\w\\\\-]+)`);\n\n  const allElements = $(`[id^=${idPrefix}]`);\n  memorizeElements(allElements);\n\n  allElements.each((_i, element) => {\n    if (element['type'] == \"select-one\"){\n      let optionSearch = `#${element['id']} option`;\n      let options = $(optionSearch);\n      options.each((_i, opt) => {\n          // the variable 'opt' is just a data structure, not a jQuery result. \n          // it has no attr, data, show or hide methods so we have to query\n          // for it again\n          let data = $(`${optionSearch}[value='${opt.value}']`).data();\n          let keys = Object.keys(data);\n          if(keys.length !== 0) {\n            keys.forEach((key) => {\n              if(key.startsWith('optionFor')) {\n                let token = key.replace(/^optionFor/,'');\n                addOptionForHandler(idFromToken(token), element['id']);\n              } else if(key.startsWith('max') || key.startsWith('min')) {\n                addMinMaxForHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('set')) {\n                addSetHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('hide')) {\n                addHideHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('label')) {\n                addLabelHandler(element['id'], opt.value, key, data[key]);\n              }\n            });\n          }\n      });\n    } else if(element['type'] == \"checkbox\") {\n      let data = $(element).data();\n      let keys = Object.keys(data);\n      if(keys.length !== 0) {\n        keys.forEach((key) => {\n          if(key.startsWith('hide')) {\n            let tokens = parseCheckedWhen(key);\n            if(tokens !== undefined){\n              addHideHandler(element['id'], tokens['value'], tokens['key'], data[key]);\n            }\n          }\n        });\n      }\n    }\n  });\n\n  initializing = false;\n};\n\nfunction addHideHandler(optionId, option, key, configValue) {\n  const changeId = idFromToken(key.replace(/^hide/,''));\n\n  if(hideLookup[optionId] === undefined) hideLookup[optionId] = new Table(changeId, undefined);\n  const table = hideLookup[optionId];\n  table.put(changeId, option, configValue);\n\n  if(hideHandlerCache[optionId] === undefined) hideHandlerCache[optionId] = [];\n\n  if(!hideHandlerCache[optionId].includes(changeId)) {\n    const changeElement = $(`#${optionId}`);\n\n    changeElement.on('change', (event) => {\n      updateVisibility(event, changeId);\n    });\n\n    hideHandlerCache[optionId].push(changeId);\n  }\n\n  updateVisibility({ target: document.querySelector(`#${optionId}`) }, changeId);\n};\n\nfunction newLabel(changeElement, key) {\n  const selectedOptionLabelIndex = changeElement[0].selectedIndex;\n  const selectedOptionLabel = changeElement[0].options[selectedOptionLabelIndex];\n  return selectedOptionLabel.dataset[key];\n};\n\nfunction updateLabel(changeId, changeElement, key) {\n  $(`label[for=\"${changeId}\"]`)[0].innerHTML = newLabel(changeElement, key);\n}\n\nfunction addLabelHandler(optionId, option, key, configValue) {\n  const changeId = idFromToken(key.replace(/^label/, ''));\n  const changeElement = $(`#${optionId}`);\n\n  if(labelLookup[optionId] === undefined) labelLookup[optionId] = new Table(changeId, undefined);\n  const table = labelLookup[optionId];\n  table.put(changeId, option, configValue);\n\n  if(labelHandlerCache[optionId] === undefined) labelHandlerCache[optionId] = [];\n\n  if(!labelHandlerCache[optionId].includes(changeId)) {\n    changeElement.on('change', (event) => {\n      updateLabel(changeId, changeElement, key);\n    });\n  };\n\n  updateLabel(changeId, changeElement, key);\n};\n\n/**\n *\n * @param {*} subjectId batch_connect_session_context_node_type\n * @param {*} option gpu\n * @param {*} key maxNumCoresForClusterAnnieOakley\n * @param {*} configValue 42\n *\n * node_type:\n *   widget: select\n *   options:\n *    - [\n *        'gpu',\n *        data-max-num-cores-for-cluster-annie-oakley: 42\n *      ]\n */\nfunction addMinMaxForHandler(subjectId, option, key,  configValue) {\n  subjectId = String(subjectId || '');\n  configValue = parseInt(configValue);\n\n  const configObj = parseMinMaxFor(key);\n  const objectId = configObj['subjectId'];\n  // this is the id of the target object we're setting the min/max for.\n  // if it's undefined - there's nothing to do, it was likely configured wrong.\n  if(objectId === undefined) return;\n\n  const secondDimId = configObj['predicateId'];\n  const secondDimValue = configObj['predicateValue'];\n\n  // several subjects can try to change the object, so the table lookup key has to have both\n  const lookupKey = `${subjectId}_${objectId}`;\n  if(minMaxLookup[lookupKey] === undefined) minMaxLookup[lookupKey] = new Table(subjectId, secondDimId);\n  const table = minMaxLookup[lookupKey];\n  table.put(option, secondDimValue, {[minOrMax(key)] : configValue });\n\n  let cacheKey = `${objectId}_${subjectId}_${secondDimId}`;\n  if(!minMaxHandlerCache.includes(cacheKey)) {\n    const changeElement = $(`#${subjectId}`);\n\n    changeElement.on('change', (event) => {\n      toggleMinMax(event, objectId, secondDimId);\n    });\n\n    minMaxHandlerCache.push(cacheKey);\n  }\n\n  cacheKey = `${objectId}_${secondDimId}_${subjectId}`;\n  if(secondDimId !== undefined && !minMaxHandlerCache.includes(cacheKey)){\n    const secondEle = $(`#${secondDimId}`);\n\n    secondEle.on('change', (event) => {\n      toggleMinMax(event, objectId, subjectId);\n    });\n\n    minMaxHandlerCache.push(cacheKey);\n  }\n\n  toggleMinMax({ target: document.querySelector(`#${subjectId}`) }, objectId, secondDimId);\n}\n\n/**\n *\n * @param {*} optionId batch_connect_session_context_classroom\n * @param {*} option 'PHY_9000'\n * @param {*} key setAccount\n * @param {*} configValue 'phy3005'\n *\n * classroom:\n *   widget: select\n *   options:\n *    - [\n *        'Physics Maximum', 'PHY_9000',\n *        data-set-account: 'phy3005'\n *      ]\n */\nfunction addSetHandler(optionId, option, key, configValue) {\n  const k = key.replace(/^set/,'');\n  const id = String(idFromToken(k));\n  if(id === 'undefined') return;\n\n  // id is account. optionId is classroom\n  let cacheKey = `${id}_${optionId}`\n  if(setValueLookup[cacheKey] === undefined) setValueLookup[cacheKey] = new Table(optionId, undefined);\n  const table = setValueLookup[cacheKey];\n  table.put(option, undefined, configValue);\n\n  if(!setHandlerCache.includes(cacheKey)) {\n    const changeElement = $(`#${optionId}`);\n\n    changeElement.on('change', (event) => {\n      setValue(event, id);\n    });\n\n    setHandlerCache.push(cacheKey);\n  }\n\n  setValue({ target: document.querySelector(`#${optionId}`) }, id);\n}\n\nfunction setValue(event, changeId) {\n  const chosenVal = event.target.value;\n  const cacheKey = `${changeId}_${event.target['id']}`\n  const table = setValueLookup[cacheKey];\n  if (table === undefined) return;\n\n  const changeVal = table.get(chosenVal, undefined);\n\n  if(changeVal !== undefined) {\n    const element = document.getElementById(changeId);\n    if(element['type'] == 'checkbox') {\n      setCheckboxValue(element, changeVal);\n    } else {\n      element.value = changeVal;\n    }\n  }\n}\n\nfunction setCheckboxValue(checkbox, value) {\n  const positiveValue = checkbox.value;\n  if(value == positiveValue) {\n    checkbox.checked = true;\n  } else {\n    checkbox.checked = false;\n  }\n}\n\n/**\n *\n *  This is a simple table class to describe the relationship between\n *  two different element types as a table with named columns.\n *\n *  table.get('gpu','owens') would return the value shown.\n *\n *      'oakley'   |                    |                |\n *      'owens'    | { min: 3, max: 42} |                |\n *                 |  'gpu'             |   'hugemem'    |\n *\n * In the simple case, it's a 1d vector instead of a 2d matrix. This\n * allows for, say, gpu to have the same min & max across clusters.\n */\nclass Table {\n  constructor(x, y) {\n    // FIXME: probably need to make Vector class? Wouldn't want to add a flag to the constructor.\n    // we don't use x or y internally, though x is used externally.\n    this.x = x;\n    this.xIdxLookup = {};\n\n    this.y = y;\n    this.yIdxLookup = {};\n    this.table = y === undefined ? [] : [[]];\n  }\n\n  put(x, y, value) {\n    if(!x) return;\n    x = snakeCaseWords(x);\n    y = snakeCaseWords(y);\n\n    if(this.xIdxLookup[x] === undefined) this.xIdxLookup[x] = Object.keys(this.xIdxLookup).length;\n    if(y && this.yIdxLookup[y] === undefined) this.yIdxLookup[y] = Object.keys(this.yIdxLookup).length;\n\n    const xIdx = this.xIdxLookup[x];\n    const yIdx = this.yIdxLookup[y];\n\n    if(this.table[xIdx] === undefined ){\n      this.table[xIdx] = y === undefined ? undefined : [];\n    }\n\n    // if y's index is defined, then it's a 2d matrix. Otherwise a 1d vector.\n    if(yIdx === undefined) {\n      if(this.table[xIdx] === undefined){\n        this.table[xIdx] = value;\n      } else {\n        const prev = this.table[xIdx];\n        const newer = value;\n        if(typeof newer == 'string' && typeof prev == 'string'){\n          this.table[xIdx] = newer;\n        } else {\n          this.table[xIdx] = Object.assign(prev, newer);\n        }\n      }\n    } else {\n      if(this.table[xIdx][yIdx] === undefined){\n        this.table[xIdx][yIdx] = value;\n      } else {\n        const prev = this.table[xIdx][yIdx];\n        const newer = value;\n        if(typeof newer == 'string' && typeof prev == 'string'){\n          this.table[xIdx][yIdx] = newer;\n        } else {\n          this.table[xIdx][yIdx] = Object.assign(prev, newer);\n        }\n      }\n    }\n  }\n\n  get(x, y) {\n    const xIdx = this.xIdxLookup[snakeCaseWords(x)];\n    const yIdx = this.yIdxLookup[snakeCaseWords(y)];\n\n    if(this.table[xIdx] === undefined){\n      return undefined;\n    }else if(y === undefined){\n      return this.table[xIdx];\n    }else {\n      return this.table[xIdx][yIdx];\n    }\n  }\n}\n\n/**\n * Update the visibility of `changeId` based on the\n * event and what's in the hideLookup table.\n */\nfunction updateVisibility(event, changeId) {\n  const val = valueFromEvent(event);\n  const id = event.target['id'];\n  let changeElement = undefined;\n  \n  $(`#${changeId}`).parents().each(function(_i, parent) {\n    var classListValues = parent.classList.values();\n    for (const val of classListValues) {\n      // TODO: Using 'mb-3' here because 'form-group' was removed\n      // from Bootstrap 5 and replaced with 'mb-3' - however, this\n      // is a grid class which could (??) apply to parent elements\n      // in unpredictable parts of the chain - test for & resolve\n      if (val.match('mb-3')) {\n        changeElement = $(parent);\n      }\n    }\n  });\n\n  if (changeElement === undefined || changeElement.length <= 0) return;\n\n  // safe to access directly?\n  const hide = hideLookup[id].get(changeId, val);\n  if((hide === false) || (hide === undefined && !initializing)) {\n    changeElement.show();\n  }else if(hide === true) {\n    changeElement.hide();\n  }\n}\n\n// extract the value from the event. With checkbox being\n// handleded specially.\nfunction valueFromEvent(event) {\n  if(event.target['type'] == 'checkbox') {\n    return event.target.checked ? 'checked' : 'unchecked';\n  } else {\n    return event.target.value;\n  }\n}\n/**\n * Update the min & max values of `changeId` based on the\n * event, the `otherId` and the settings in minMaxLookup table.\n */\nfunction toggleMinMax(event, changeId, otherId) {\n  let x = undefined, y = undefined;\n\n  // many subjects can change the object, so we have to find the correct table\n  // in the form <subject>_<object>\n  let lookupKey = `${event.target['id']}_${changeId}`;\n  if(minMaxLookup[lookupKey] === undefined) {\n    lookupKey = `${otherId}_${changeId}`;\n  }\n\n  const table = minMaxLookup[lookupKey];\n\n  // in the example of cluster & node_type, either element can trigger a change\n  // so let's figure out the axis' based on the change element's id.\n  if(event.target['id'] == table.x) {\n    x = snakeCaseWords(event.target.value);\n    y = snakeCaseWords($(`#${otherId}`).val());\n  } else {\n    y = snakeCaseWords(event.target.value);\n    x = snakeCaseWords($(`#${otherId}`).val());\n  }\n\n  const changeElement = $(`#${changeId}`);\n  const mm = table.get(x, y);\n  const prev = {\n    min: parseInt(changeElement.attr('min')),\n    max: parseInt(changeElement.attr('max')),\n  };\n\n  [ 'max', 'min' ].forEach((dim) => {\n    if(mm && mm[dim] !== undefined) {\n      changeElement.attr(dim, mm[dim]);\n    }\n  });\n\n  const val = clamp(parseInt(changeElement.val()), prev, mm)\n  if (val !== undefined) {\n    changeElement.attr('value', val);\n    changeElement.val(val);\n  }\n}\n\nfunction clamp(currentValue, previous, next) {\n  if(next === undefined){\n    return undefined;\n\n  // you've set the boundary, so when you go to the next value - keep it at the next's boundary\n  } else if(currentValue === previous['min']) {\n    return next['min'];\n  } else if(currentValue === previous['max']) {\n    return next['max'];\n\n  // otherwise you could be up or down shifting to fit within the next's boundaries\n  } else if(currentValue <= next['min']) {\n    return next['min'];\n  } else if(currentValue >= next['max']) {\n    return next['max'];\n  } else {\n    return undefined;\n  }\n}\n\nfunction addOptionForHandler(causeId, targetId) {\n  const changeId = String(causeId || '');\n\n  if(changeId.length == 0 || optionForHandlerCache[causeId].includes(targetId)) {\n    // nothing to do. invalid causeId or we already have a handler between the 2\n    return;\n  }\n\n  let causeElement = $(`#${causeId}`);\n\n  if(targetId && causeElement) {\n    // cache the fact that there's a new handler here\n    optionForHandlerCache[causeId].push(targetId);\n\n    causeElement.on('change', (event) => {\n      toggleOptionsFor(event, targetId);\n    });\n\n    // fake an event to initialize\n    toggleOptionsFor({ target: document.querySelector(`#${causeId}`) }, targetId);\n  }\n};\n\nfunction parseCheckedWhen(key) {\n  const tokens = key.match(/^hide(\\w+)When(\\w+)$/);\n\n  if(tokens !== undefined && tokens.length && tokens.length == 3) {\n    return {\n      'key': tokens[1],\n      'value': tokens[2].toLowerCase() == 'checked' ? 'checked' : 'unchecked'\n    };\n  } else {\n    return undefined;\n  }\n}\n\n/**\n *\n * @param {*} key minNumCoresForClusterAnnieOakley\n * @returns\n *\n *  {\n *    'subjectId': 'batch_connect_session_context_num_cores',\n *    'predicateId': 'batch_connect_session_context_cluster',\n *    'predicateValue': 'annie_oakley'\n *  }\n */\nfunction parseMinMaxFor(key) {\n  let k = undefined;\n  let predicateId = undefined;\n  let predicateValue = undefined;\n  let subjectId = undefined;\n\n  if(key.startsWith('min')) {\n    k = key.replace(/^min/,'');\n  } else if(key.startsWith('max')) {\n    k = key.replace(/^max/, '')\n  }\n\n  //trying to parse maxNumCoresForClusterOwens\n  const tokens = k.match(/^(\\w+)For(\\w+)$/);\n\n  if(tokens == null) {\n    // the key is likely just maxNumCores with no For clause\n    subjectId = idFromToken(k);\n\n  } else if(tokens.length == 3) {\n    const subject = tokens[1];\n    const predicateFull = tokens[2];\n    subjectId = idFromToken(subject);\n\n    const predicateTokens = predicateFull.split(/(?=[A-Z])/);\n    if(predicateTokens && predicateTokens.length >= 2) {\n\n      // if there are only 2 tokens then it's like 'ClusterOwens' which is easy\n      if(predicateTokens.length == 2) {\n        predicateId = idFromToken(predicateTokens[0]);\n        predicateValue = predicateTokens[1];\n\n      // else it's like NodeTypeFooBar, so it's a little more difficult\n      } else {\n        let tokenString = '';\n        let done = false;\n        predicateTokens.forEach((pt, idx) => {\n          if(done) { return; }\n\n          tokenString = `${tokenString}${pt}`\n          let tokenId = idFromToken(tokenString);\n          if(tokenId !== undefined) {\n            done = true;\n            predicateId = tokenId;\n            predicateValue = predicateTokens.slice(idx+1).join('');\n          }\n        })\n      }\n    }\n  }\n\n  return {\n    'subjectId': subjectId,\n    'predicateId': predicateId,\n    'predicateValue': snakeCaseWords(predicateValue),\n  }\n}\n\nfunction minOrMax(key) {\n  if(key.startsWith('min')){\n    return 'min';\n  } else if(key.startsWith('max')){\n    return 'max';\n  } else {\n    return null;\n  }\n}\n\n/**\n * Turn a MountainCase token into a form element id\n *\n * @example\n *  NodeType -> batch_connect_session_context_node_type\n *\n * @param {*} str\n * @returns\n */\nfunction idFromToken(str) {\n  elements = formTokens.map((token) => {\n    let match = str.match(`^${token}{1}`);\n\n    if (match && match.length >= 1) {\n      let ele = snakeCaseWords(match[0]);\n      return idWithPrefix(ele);\n    }\n  }).filter((id) => {\n    return id !== undefined;\n  });\n\n  if(elements.length == 0) {\n    return undefined;\n  }else if(elements.length == 1) {\n    return elements[0];\n\n  // you matched multiple things. For example you're searching for\n  // ClusterFilesystem and matched against both 'Cluster' and 'ClusterFilesystem'.\n  // The correrct element id ends with cluster_filesystem.\n  } else if(elements.length > 1) {\n    const snake_case_str = snakeCaseWords(str);\n    return elements.filter((element) => {\n      return element.endsWith(snake_case_str);\n    })[0];\n  }\n}\n\n\n/**\n * Extract the option for out of an option for directive.\n *\n * @example\n *  optionForClusterOakley -> Cluster\n *\n * @param {*} str\n * @returns - the option for string\n */\nfunction optionForFromToken(str) {\n  return formTokens.map((token) => {\n    let match = str.match(`^optionFor${token}`);\n\n    if (match && match.length >= 1) {\n      return token;\n    }\n  }).filter((id) => {\n    return id !== undefined;\n  })[0];\n}\n\n/**\n * Hide or show options of an element based on which cluster is\n * currently selected and the data-option-for-CLUSTER attributes\n * for each option\n *\n * @param      {string}  element_name  The name of the element with options to toggle\n */\n function toggleOptionsFor(_event, elementId) {\n  const options = [...document.querySelectorAll(`#${elementId} option`)];\n  let hideSelectedValue = undefined;\n\n  options.forEach(option => {\n    let hide = false;\n\n    // even though an event occured - an option may be hidden based on the value of\n    // something else entirely. We're going to hide this option if _any_ of the\n    // option-for- directives apply.\n    for (let key of Object.keys(option.dataset)) {\n      let optionFor = optionForFromToken(key);\n      let optionForId = idFromToken(key.replace(/^optionFor/,''));\n\n      // it's some other directive type, so just keep going and/or not real\n      if(!key.startsWith('optionFor') || optionForId === undefined) {\n        continue;\n      }\n\n      let optionForValue = mountainCaseWords(document.getElementById(optionForId).value);\n      // handle special case where the very first token here is a number.\n      // browsers expect a prefix of hyphens as if it's the next token.\n      if (optionForValue.match(/^\\d/)) {\n        optionForValue = `-${optionForValue}`;\n      }\n\n      hide = option.dataset[`optionFor${optionFor}${optionForValue}`] === 'false';\n      if (hide) {\n        break;\n      }\n    };\n\n    if(hide) {\n      if(option.selected) {\n        option.selected = false;\n        hideSelectedValue = option.textContent;\n      }\n\n      option.style.display = 'none';\n      option.disabled = true;\n    } else {\n      option.style.display = '';\n      option.disabled = false;\n    }\n  });\n\n  // now that we've hidden/shown everything, let's choose what should now\n  // be the current selected value.\n  // if you've hidden what _was_ selected.\n  if(hideSelectedValue !== undefined) {\n    let others = [...document.querySelectorAll(`#${elementId} option[value='${hideSelectedValue}']`)];\n    let newSelectedOption = undefined;\n\n    // You have hidden what _was_ selected, so try to find a duplicate option that is visible\n    if(others.length > 1) {\n      others.forEach(ele => {\n        if(ele.style.display === '') {\n          newSelectedOption = ele;\n          return;\n        }\n      });\n    }\n\n    // no duplciates are visible, so just pick the first visible option\n    if (newSelectedOption === undefined) {\n      others = document.querySelectorAll(`#${elementId} option`);\n      others.forEach(ele => {\n        if(newSelectedOption === undefined && ele.style.display === '') {\n          newSelectedOption = ele;\n        }\n      });\n    }\n\n    if (newSelectedOption !== undefined) {\n      newSelectedOption.selected = true;\n    }\n  }\n\n  // now that we're done, propogate this change to data-set or data-hide handlers\n  document.getElementById(elementId).dispatchEvent((new Event('change', { bubbles: true })));\n};\n\n\nexport {\n  makeChangeHandlers\n}\n", "'use strict';\n\nimport { attachPathSelectors } from './path_selector/path_selector';\nimport { prefillTemplatesHandler } from './prefill_templates/prefill_templates';\nimport { prefillSubmitHandler } from './prefill_templates/prefill_submit';\nimport { isBCDynamicJSEnabled } from './config';\nimport { makeChangeHandlers } from './dynamic_forms';\n\n\njQuery(function() {\n  if(isBCDynamicJSEnabled()){\n    makeChangeHandlers('batch_connect_session_context');\n  }\n\n  attachPathSelectors();\n  prefillTemplatesHandler();\n  prefillSubmitHandler();\n});"],
  "mappings": ";AACO,IAAM,oBAAN,MAAwB;AAAA,EAC7B,SAAS;AAAA,EAGT,UAAsB;AAAA,EACtB,YAAsB;AAAA,EACtB,eAAsB;AAAA,EACtB,mBAAsB;AAAA,EACtB,iBAAsB;AAAA,EACtB,eAAsB;AAAA,EACtB,UAAsB;AAAA,EACtB,aAAsB;AAAA,EACtB,YAAsB;AAAA,EAEtB,YAAYA,UAAS;AACjB,SAAK,UAAsBA,SAAQ;AACnC,SAAK,YAAsBA,SAAQ;AACnC,SAAK,eAAsBA,SAAQ;AACnC,SAAK,mBAAsBA,SAAQ;AACnC,SAAK,iBAAsBA,SAAQ;AACnC,SAAK,eAAsBA,SAAQ;AACnC,SAAK,UAAsBA,SAAQ;AACnC,SAAK,aAAsBA,SAAQ,eAAe;AAClD,SAAK,YAAsBA,SAAQ,cAAc;AAEjD,SAAK,cAAc;AACnB,SAAK,YAAY,KAAK,WAAW,CAAC;AAElC,MAAE,IAAI,KAAK,eAAe,EAAE,GAAG,SAAS,MAAM,CAAC,UAAU;AAAE,WAAK,SAAS,KAAK;AAAA,IAAE,CAAC;AACjF,MAAE,YAAY,EAAE,GAAG,SAAS,MAAM,CAAC,UAAU;AAAE,WAAK,SAAS,KAAK;AAAA,IAAE,CAAC;AACrE,MAAE,IAAI,KAAK,cAAc,EAAE,GAAG,SAAS,MAAM,CAAC,UAAU;AAAE,WAAK,gBAAgB,KAAK;AAAA,IAAE,CAAC;AACvF,MAAE,IAAI,KAAK,gBAAgB,EAAE,GAAG,SAAS,CAAC,UAAU;AAAE,WAAK,WAAW,KAAK;AAAA,IAAE,CAAC;AAAA,EAClF;AAAA,EAEA,gBAAgB;AACd,SAAK,SAAS,EAAE,IAAI,KAAK,SAAS,EAAE,UAAU;AAAA,MAC5C,WAAW;AAAA,MACX,UAAU;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,MACA,OAAO,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;AAAA,MAC9B,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,QAAQ;AAAA,QACJ,OAAO;AAAA,QACP,WAAW;AAAA,QACX,YAAY;AAAA,QAGZ,UAAU;AAAA,MACd;AAAA,MAKA,KAAK;AAAA,MAGL,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,QAAQ,CAAC,MAAM,OAAO,MAAM,UAAU,QAAQ,MAAM,oGAAoG;AAAA,QAC1J;AAAA,QACA;AAAA,UACI,MAAM;AAAA,UACN,MAAM;AAAA,UACN,WAAW;AAAA,UACX,QAAQ,CAAC,MAAM,OAAO,MAAM,UAAU;AAClC,mBAAO,SAAS;AAAA,UACpB;AAAA,QAEJ;AAAA,MACF;AAAA,MACA,YAAY,SAAU,KAAK,MAAM,YAAY;AAC3C,YAAI,UAAU,IAAI,WAAW;AAC7B,YAAI,QAAQ,YAAY,KAAK;AAC7B,YAAI,QAAQ,cAAc,KAAK;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,YAAY,KAAK;AACrB,QAAI;AACF,QAAE,KAAK,aAAa,CAAC,EAAE,KAAK;AAC5B,QAAE,eAAe,EAAE,KAAK;AACxB,YAAM,WAAW,MAAM,MAAM,KAAK,EAAE,SAAS,EAAE,UAAU,mBAAmB,GAAG,OAAO,WAAW,CAAC;AAClG,YAAM,OAAO,MAAM,KAAK,qBAAqB,QAAQ;AACrD,QAAE,IAAI,KAAK,cAAc,EAAE,KAAK,KAAK,8BAA8B;AACnE,WAAK,OAAO,MAAM;AAClB,WAAK,OAAO,KAAK,IAAI,KAAK,KAAK;AAC/B,WAAK,eAAe,KAAK,IAAI;AAC7B,WAAK,OAAO,KAAK;AACjB,WAAK,WAAW;AAAA,IAClB,SAAS,KAAP;AACA,WAAK,WAAW;AAChB,UAAI,IAAI,QAAQ,MAAM,mBAAmB,GAAG;AAC1C,UAAE,oBAAoB,EAAE,YAAY,QAAQ;AAC5C,UAAE,oBAAoB,EAAE,QAAQ,OAAO;AAAA,MACzC;AACA,cAAQ,IAAI,GAAG;AAAA,IACjB;AAAA,EACF;AAAA,EAEA,aAAa;AACX,MAAE,eAAe,EAAE,KAAK;AACxB,MAAE,KAAK,aAAa,CAAC,EAAE,KAAK;AAC5B,MAAE,oBAAoB,EAAE,SAAS,QAAQ;AAAA,EAC3C;AAAA,EAEA,qBAAqB,UAAU;AAC7B,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAQ,QAAQ,QAAQ,EACrB,KAAK,CAAAC,cAAYA,UAAS,KAAK,QAAQ,QAAQA,SAAQ,IAAI,QAAQ,OAAO,IAAI,MAAMA,UAAS,UAAU,CAAC,CAAC,EACzG,KAAK,CAAAA,cAAYA,UAAS,KAAK,CAAC,EAChC,KAAK,UAAQ,KAAK,mBAAmB,IAAI,CAAC,EAC1C,KAAK,UAAQ,KAAK,gBAAgB,QAAQ,OAAO,IAAI,MAAM,KAAK,aAAa,CAAC,IAAI,QAAQ,IAAI,CAAC,EAC/F,MAAM,CAAC,MAAM,OAAO,CAAC,CAAC;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA,EAEA,SAAS,OAAO;AACd,UAAM,MAAM,EAAE,MAAM,MAAM,EAAE,QAAQ,IAAI,EAAE,IAAI,CAAC,KAAK,MAAM;AAC1D,UAAM,MAAM,IAAI,QAAQ;AACxB,UAAM,WAAW,IAAI,QAAQ;AAC7B,SAAK,iBAAiB,GAAG;AAIzB,QAAG,YAAY,KAAK;AAClB,YAAM,OAAO,IAAI,QAAQ,KAAK,WAAW,EAAE,EAAE,WAAW,MAAK,GAAG;AAChE,WAAK,eAAe,MAAM,QAAQ;AAAA,IACpC,OAAO;AACL,WAAK,YAAY,GAAG;AAAA,IACtB;AAAA,EACF;AAAA,EAEA,iBAAiB,kBAAkB;AACjC,MAAE,WAAW,EAAE,KAAK,CAAC,MAAM,QAAQ;AACjC,UAAI,UAAU,OAAO,QAAQ;AAAA,IAC/B,CAAC;AAED,QAAG,iBAAiB,WAAW,MAAM;AACnC,uBAAiB,UAAU,IAAI,QAAQ;AAAA,IACzC;AAAA,EACF;AAAA,EAEA,gBAAgB,OAAO;AACrB,UAAM,OAAO,MAAM,OAAO;AAC1B,SAAK,iBAAiB,MAAM,MAAM;AAClC,SAAK,YAAY,IAAI;AAAA,EACvB;AAAA,EAEA,WAAW,QAAQ;AACjB,UAAM,OAAO,KAAK,eAAe;AACjC,UAAM,aAAa,SAAS,eAAe,KAAK,YAAY;AAC5D,eAAW,QAAQ,KAAK;AACxB,MAAE,IAAI,KAAK,SAAS,EAAE,MAAM,MAAM;AAAA,EACpC;AAAA,EAEA,aAAa;AACX,UAAM,kBAAkB,OAAO,SAAS,SAAS,WAAW,KAAK,GAAG;AACpE,WAAO,GAAG,KAAK,UAAU;AAAA,EAC3B;AAAA,EAEA,eAAe;AACb,WAAO,IAAI,KAAK;AAAA,EAClB;AAAA,EAIA,iBAAiB;AACf,UAAM,cAAc,aAAa,QAAQ,KAAK,WAAW,CAAC;AAC1D,QAAG,gBAAgB,MAAM;AACvB,aAAO,EAAE,MAAM,KAAK,kBAAkB,MAAM,IAAI;AAAA,IAClD,OAAO;AACL,aAAO,KAAK,MAAM,WAAW;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,eAAe,MAAM,WAAW,KAAK;AACnC,UAAM,OAAO,EAAE,MAAY,MAAM,SAAS;AAC1C,QAAG,MAAM;AACP,mBAAa,QAAQ,KAAK,WAAW,GAAG,KAAK,UAAU,IAAI,CAAC;AAAA,IAC9D;AAAA,EACF;AAAA,EAEA,aAAa;AACX,UAAM,OAAO,KAAK,eAAe;AACjC,QAAI,OAAO;AAIX,QAAG,KAAK,QAAQ,KAAK;AACnB,aAAO,KAAK,KAAK,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG;AAAA,IACnD,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAEA,QAAG,KAAK,WAAW,GAAG,GAAG;AACvB,aAAO,GAAG,KAAK,YAAY;AAAA,IAC7B,OAAO;AACL,aAAO,GAAG,KAAK,aAAa;AAAA,IAC9B;AAAA,EACF;AAAA,EAGA,mBAAmB,MAAM;AACvB,UAAM,gBAAgB,KAAK,MAAM,OAAO,CAAC,SAAS;AAChD,YAAM,WAAW,KAAK,KAAK,WAAW,GAAG;AACzC,YAAM,SAAS,KAAK,QAAQ;AAE5B,UAAG,YAAY,QAAQ;AACrB,eAAO,KAAK,cAAc,KAAK;AAAA,MACjC,WAAU,UAAU;AAClB,eAAO,KAAK;AAAA,MACd,WAAU,QAAQ;AAChB,eAAO,KAAK;AAAA,MACd,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAED,SAAK,QAAQ;AACb,WAAO;AAAA,EACT;AACF;;;AC/NO,SAAS,sBAAsB;AACpC,IAAE,6BAA6B,EAAE,KAAK,CAAC,MAAM,YAAY;AACvD,UAAM,QAAQ,IAAI,eAAe,QAAQ,EAAE;AAC3C,UAAM,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC;AAE5B,cAAU,KAAK;AAAA,EACjB,CAAC;AACH;AAEA,SAAS,eAAe,IAAI;AAC1B,SAAO,GAAG;AACZ;AAEA,SAAS,UAAU,SAAS;AAC1B,QAAMC,WAAU,uBAAuB,OAAO;AAC9C,MAAI,kBAAkBA,QAAO;AAC/B;AAEA,SAAS,uBAAuB,SAAS;AACvC,YAAU,CAAC;AAEX,UAAQ,YAAsB,QAAQ,QAAQ;AAC9C,UAAQ,mBAAsB,QAAQ,QAAQ;AAC9C,UAAQ,UAAsB,QAAQ,QAAQ;AAC9C,UAAQ,eAAsB,QAAQ,QAAQ;AAC9C,UAAQ,iBAAsB,QAAQ,QAAQ;AAC9C,UAAQ,eAAsB,QAAQ,QAAQ;AAC9C,UAAQ,YAAsB,QAAQ,QAAQ;AAC9C,UAAQ,aAAsB,QAAQ,QAAQ;AAC9C,UAAQ,UAAsB,QAAQ;AAEtC,SAAO;AACT;;;AClCA,IAAM,WAAW;AACjB,IAAM,mBAAmB;AAElB,SAAS,0BAA0B;AACxC,QAAM,SAAS,EAAE,IAAI,kBAAkB;AACvC,MAAI,OAAO,UAAU,GAAG;AAAE;AAAA,EAAQ;AAElC,SAAO,GAAG,UAAU,WAAY;AAC9B,UAAM,iBAAiB,EAAE,IAAI,kCAAkC;AAC/D,QAAI,CAAC,eAAe,IAAI,GAAG;AAAE;AAAA,IAAQ;AAErC,QAAI;AACJ,QAAI;AACF,aAAO,KAAK,MAAM,eAAe,IAAI,CAAC;AAAA,IACxC,SAAS,OAAP;AACA,QAAE,kDAAkD,EAAE,KAAK,MAAM,OAAO;AACxE,QAAE,uDAAuD,EAAE,MAAM,MAAM;AACvE;AAAA,IACF;AAEA,QAAI,WAAW;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,IAAI,GAAG;AAC/C,UAAI,UAAU,EAAE,IAAI,YAAY,KAAK;AAErC,UAAI,QAAQ,UAAU,GAAG;AAEvB,YAAI,QAAQ,KAAK,KAAK,GAAG;AACvB,oBAAU,EAAE,IAAI,YAAY,OAAO,OAAO;AAAA,QAC5C,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,UAAI,QAAQ,GAAG,QAAQ,KAAK,UAAU,IAAI;AAExC,YAAI,QAAQ,KAAK,iBAAiB,SAAS,EAAE,UAAU,GAAG;AACxD,sBAAY,mBAAmB,yBAAyB;AACxD;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,QAAQ,KAAK,MAAM;AAAA,aACpB;AACH,oBAAU,MAAM,QAAQ,KAAK,WAAW,IAAI,IAAI,QAAQ,KAAK,WAAW,KAAK;AAC7E;AAAA,aAEG;AACH,kBAAQ,OAAO,WAAW,SAAS,EAAE,KAAK,WAAW,IAAI;AAAA;AAGzD,kBAAQ,IAAI,KAAK;AACjB;AAAA;AAEJ,cAAQ,QAAQ,QAAQ;AAAA,IAC1B;AAEA,QAAI,UAAU;AACZ,QAAE,uDAAuD,EAAE,KAAK,QAAQ;AACxE,QAAE,kDAAkD,EAAE,MAAM,MAAM;AAAA,IACpE;AAAA,EACF,CAAC;AACH;;;AC7DA,IAAM,aAAa;AACnB,IAAM,YAAY;AAEX,SAAS,uBAAuB;AAErC,QAAM,qBAAqB,EAAE,qBAAqB;AAClD,MAAI,mBAAmB,WAAW,GAAG;AACnC;AAAA,EACF;AAEA,QAAM,0BAA0B,EAAE,kDAAkD;AACpF,QAAM,eAAe,EAAE,sCAAsC;AAC7D,QAAM,eAAe,EAAE,sCAAsC;AAC7D,QAAM,aAAa,EAAE,6CAA6C;AAElE,IAAE,IAAI,YAAY,EAAE,GAAG,UAAU,WAAY;AAC3C,UAAM,UAAU,EAAE,IAAI,WAAW;AACjC,QAAI,EAAE,IAAI,EAAE,IAAI,MAAM,IAAI;AACxB,cAAQ,KAAK;AAAA,IACf,OAAO;AACL,cAAQ,KAAK;AAAA,IACf;AAAA,EACF,CAAC;AAED,IAAE,oDAAoD,EAAE,GAAG,SAAS,WAAY;AAC9E,UAAM,OAAO,EAAE,IAAI,YAAY,EAAE,IAAI,KAAK,EAAE,IAAI,WAAW,EAAE,IAAI;AACjE,QAAI,SAAS,IAAI;AACf,8BAAwB,MAAM,MAAM;AACpC;AAAA,IACF;AAEA,4BAAwB,MAAM,MAAM;AACpC,iBAAa,IAAI,IAAI;AACrB,uBAAmB,MAAM,MAAM;AAC/B,eAAW,KAAK,YAAY,KAAK;AAAA,EACnC,CAAC;AAED,eAAa,GAAG,UAAU,WAAY;AACpC,QAAI,EAAE,IAAI,EAAE,GAAG,UAAU,GAAG;AAC1B,yBAAmB,MAAM,MAAM;AAAA,IACjC,OAAO;AACL,mBAAa,IAAI,EAAE;AACnB,QAAE,IAAI,YAAY,EAAE,IAAI,EAAE;AAC1B,YAAM,UAAU,EAAE,IAAI,WAAW;AACjC,cAAQ,IAAI,EAAE;AACd,cAAQ,KAAK;AACb,iBAAW,KAAK,YAAY,IAAI;AAAA,IAClC;AAAA,EACF,CAAC;AAED,qBAAmB,GAAG,mBAAmB,WAAY;AACnD,QAAI,aAAa,IAAI,MAAM,IAAI;AAC7B,mBAAa,KAAK,WAAW,KAAK;AAClC,mBAAa,QAAQ,QAAQ;AAAA,IAC/B;AAAA,EACF,CAAC;AACH;;;AC1DA;AAEA,IAAM,YAAY;AAEX,SAAS,aAAa;AAC3B,SAAO,SAAS,eAAe,SAAS,EAAE;AAC5C;AA6CO,SAAS,uBAAuB;AACrC,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ,kBAAkB;AACnC;;;ACnDA,IAAI,WAAW;AACf,IAAI,eAAe;AAGnB,IAAM,aAAa,CAAC;AAKpB,IAAM,wBAAwB,CAAC;AAI/B,IAAM,qBAAqB,CAAC;AAC5B,IAAM,kBAAkB,CAAC;AAEzB,IAAM,mBAAmB,CAAC;AAC1B,IAAM,oBAAoB,CAAC;AAI3B,IAAM,eAAe,CAAC;AACtB,IAAM,iBAAiB,CAAC;AACxB,IAAM,aAAa,CAAC;AACpB,IAAM,cAAc,CAAC;AAGrB,IAAM,QAAQ;AAGd,IAAI,eAAe;AAEnB,SAAS,aAAa,MAAM;AAC1B,SAAO,GAAG,YAAY,KAAK,YAAY;AACzC;AAIA,SAAS,QAAQ,WAAW;AAC1B,QAAM,QAAQ,UAAU,MAAM,YAAY;AAE1C,MAAI,MAAM,UAAU,GAAG;AACrB,WAAO,MAAM;AAAA,EACf,OAAO;AACL,WAAO;AAAA,EACT;AAAC;AACH;AAgBA,SAAS,kBAAkB,KAAK;AAC9B,QAAM,QAAQ,IAAI,YAAY;AAC9B,QAAM,QAAQ,MAAM,OAAO,CAAC,EAAE,YAAY;AAC1C,QAAM,OAAO,MAAM,MAAM,CAAC,EAAE,QAAQ,OAAO,SAAS,MAAM,QAAQ,gBAAgB,OAAO;AACvF,QAAG,QAAO;AACR,aAAO,OAAO,YAAY;AAAA,IAC5B,WAAS,gBAAe;AACtB,aAAO,eAAe,QAAQ,KAAI,GAAG;AAAA,IACvC,WAAS,OAAM;AACb,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAED,SAAQ,GAAG,QAAQ;AACrB;AAaA,SAAS,eAAe,KAAK;AAC3B,MAAG,QAAQ;AAAW,WAAO;AAI7B,QAAM,MAAM;AACZ,QAAM,QAAQ,IAAI,MAAM,GAAG;AAG3B,SAAO,MAAM,OAAO,UAAQ,QAAQ,EAAE,EAAE,IAAI,UAAQ,KAAK,YAAY,CAAC,EAAE,KAAK,GAAG;AAClF;AAMA,SAAS,iBAAiBC,WAAU;AAClC,EAAAA,UAAS,KAAK,CAAC,IAAI,QAAQ;AACzB,eAAW,KAAK,kBAAkB,QAAQ,IAAI,KAAK,CAAC,CAAC;AACrD,0BAAsB,IAAI,SAAS,CAAC;AAAA,EACtC,CAAC;AACH;AAEA,SAAS,mBAAmB,QAAO;AAGjC,aAAW;AACX,iBAAe,IAAI,OAAO,GAAG,sBAAsB;AAEnD,QAAM,cAAc,EAAE,QAAQ,WAAW;AACzC,mBAAiB,WAAW;AAE5B,cAAY,KAAK,CAAC,IAAI,YAAY;AAChC,QAAI,QAAQ,WAAW,cAAa;AAClC,UAAI,eAAe,IAAI,QAAQ;AAC/B,UAAIC,WAAU,EAAE,YAAY;AAC5B,MAAAA,SAAQ,KAAK,CAACC,KAAI,QAAQ;AAItB,YAAI,OAAO,EAAE,GAAG,uBAAuB,IAAI,SAAS,EAAE,KAAK;AAC3D,YAAI,OAAO,OAAO,KAAK,IAAI;AAC3B,YAAG,KAAK,WAAW,GAAG;AACpB,eAAK,QAAQ,CAAC,QAAQ;AACpB,gBAAG,IAAI,WAAW,WAAW,GAAG;AAC9B,kBAAI,QAAQ,IAAI,QAAQ,cAAa,EAAE;AACvC,kCAAoB,YAAY,KAAK,GAAG,QAAQ,KAAK;AAAA,YACvD,WAAU,IAAI,WAAW,KAAK,KAAK,IAAI,WAAW,KAAK,GAAG;AACxD,kCAAoB,QAAQ,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI;AAAA,YAC9D,WAAU,IAAI,WAAW,KAAK,GAAG;AAC/B,4BAAc,QAAQ,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI;AAAA,YACxD,WAAU,IAAI,WAAW,MAAM,GAAG;AAChC,6BAAe,QAAQ,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI;AAAA,YACzD,WAAU,IAAI,WAAW,OAAO,GAAG;AACjC,8BAAgB,QAAQ,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI;AAAA,YAC1D;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACJ,CAAC;AAAA,IACH,WAAU,QAAQ,WAAW,YAAY;AACvC,UAAI,OAAO,EAAE,OAAO,EAAE,KAAK;AAC3B,UAAI,OAAO,OAAO,KAAK,IAAI;AAC3B,UAAG,KAAK,WAAW,GAAG;AACpB,aAAK,QAAQ,CAAC,QAAQ;AACpB,cAAG,IAAI,WAAW,MAAM,GAAG;AACzB,gBAAI,SAAS,iBAAiB,GAAG;AACjC,gBAAG,WAAW,QAAU;AACtB,6BAAe,QAAQ,OAAO,OAAO,UAAU,OAAO,QAAQ,KAAK,IAAI;AAAA,YACzE;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,CAAC;AAED,iBAAe;AACjB;AAEA,SAAS,eAAe,UAAU,QAAQ,KAAK,aAAa;AAC1D,QAAM,WAAW,YAAY,IAAI,QAAQ,SAAQ,EAAE,CAAC;AAEpD,MAAG,WAAW,cAAc;AAAW,eAAW,YAAY,IAAI,MAAM,UAAU,MAAS;AAC3F,QAAM,QAAQ,WAAW;AACzB,QAAM,IAAI,UAAU,QAAQ,WAAW;AAEvC,MAAG,iBAAiB,cAAc;AAAW,qBAAiB,YAAY,CAAC;AAE3E,MAAG,CAAC,iBAAiB,UAAU,SAAS,QAAQ,GAAG;AACjD,UAAM,gBAAgB,EAAE,IAAI,UAAU;AAEtC,kBAAc,GAAG,UAAU,CAAC,UAAU;AACpC,uBAAiB,OAAO,QAAQ;AAAA,IAClC,CAAC;AAED,qBAAiB,UAAU,KAAK,QAAQ;AAAA,EAC1C;AAEA,mBAAiB,EAAE,QAAQ,SAAS,cAAc,IAAI,UAAU,EAAE,GAAG,QAAQ;AAC/E;AAEA,SAAS,SAAS,eAAe,KAAK;AACpC,QAAM,2BAA2B,cAAc,GAAG;AAClD,QAAM,sBAAsB,cAAc,GAAG,QAAQ;AACrD,SAAO,oBAAoB,QAAQ;AACrC;AAEA,SAAS,YAAY,UAAU,eAAe,KAAK;AACjD,IAAE,cAAc,YAAY,EAAE,GAAG,YAAY,SAAS,eAAe,GAAG;AAC1E;AAEA,SAAS,gBAAgB,UAAU,QAAQ,KAAK,aAAa;AAC3D,QAAM,WAAW,YAAY,IAAI,QAAQ,UAAU,EAAE,CAAC;AACtD,QAAM,gBAAgB,EAAE,IAAI,UAAU;AAEtC,MAAG,YAAY,cAAc;AAAW,gBAAY,YAAY,IAAI,MAAM,UAAU,MAAS;AAC7F,QAAM,QAAQ,YAAY;AAC1B,QAAM,IAAI,UAAU,QAAQ,WAAW;AAEvC,MAAG,kBAAkB,cAAc;AAAW,sBAAkB,YAAY,CAAC;AAE7E,MAAG,CAAC,kBAAkB,UAAU,SAAS,QAAQ,GAAG;AAClD,kBAAc,GAAG,UAAU,CAAC,UAAU;AACpC,kBAAY,UAAU,eAAe,GAAG;AAAA,IAC1C,CAAC;AAAA,EACH;AAAC;AAED,cAAY,UAAU,eAAe,GAAG;AAC1C;AAiBA,SAAS,oBAAoB,WAAW,QAAQ,KAAM,aAAa;AACjE,cAAY,OAAO,aAAa,EAAE;AAClC,gBAAc,SAAS,WAAW;AAElC,QAAM,YAAY,eAAe,GAAG;AACpC,QAAM,WAAW,UAAU;AAG3B,MAAG,aAAa;AAAW;AAE3B,QAAM,cAAc,UAAU;AAC9B,QAAM,iBAAiB,UAAU;AAGjC,QAAM,YAAY,GAAG,aAAa;AAClC,MAAG,aAAa,eAAe;AAAW,iBAAa,aAAa,IAAI,MAAM,WAAW,WAAW;AACpG,QAAM,QAAQ,aAAa;AAC3B,QAAM,IAAI,QAAQ,gBAAgB,EAAC,CAAC,SAAS,GAAG,IAAK,YAAY,CAAC;AAElE,MAAI,WAAW,GAAG,YAAY,aAAa;AAC3C,MAAG,CAAC,mBAAmB,SAAS,QAAQ,GAAG;AACzC,UAAM,gBAAgB,EAAE,IAAI,WAAW;AAEvC,kBAAc,GAAG,UAAU,CAAC,UAAU;AACpC,mBAAa,OAAO,UAAU,WAAW;AAAA,IAC3C,CAAC;AAED,uBAAmB,KAAK,QAAQ;AAAA,EAClC;AAEA,aAAW,GAAG,YAAY,eAAe;AACzC,MAAG,gBAAgB,UAAa,CAAC,mBAAmB,SAAS,QAAQ,GAAE;AACrE,UAAM,YAAY,EAAE,IAAI,aAAa;AAErC,cAAU,GAAG,UAAU,CAAC,UAAU;AAChC,mBAAa,OAAO,UAAU,SAAS;AAAA,IACzC,CAAC;AAED,uBAAmB,KAAK,QAAQ;AAAA,EAClC;AAEA,eAAa,EAAE,QAAQ,SAAS,cAAc,IAAI,WAAW,EAAE,GAAG,UAAU,WAAW;AACzF;AAiBA,SAAS,cAAc,UAAU,QAAQ,KAAK,aAAa;AACzD,QAAM,IAAI,IAAI,QAAQ,QAAO,EAAE;AAC/B,QAAM,KAAK,OAAO,YAAY,CAAC,CAAC;AAChC,MAAG,OAAO;AAAa;AAGvB,MAAI,WAAW,GAAG,MAAM;AACxB,MAAG,eAAe,cAAc;AAAW,mBAAe,YAAY,IAAI,MAAM,UAAU,MAAS;AACnG,QAAM,QAAQ,eAAe;AAC7B,QAAM,IAAI,QAAQ,QAAW,WAAW;AAExC,MAAG,CAAC,gBAAgB,SAAS,QAAQ,GAAG;AACtC,UAAM,gBAAgB,EAAE,IAAI,UAAU;AAEtC,kBAAc,GAAG,UAAU,CAAC,UAAU;AACpC,eAAS,OAAO,EAAE;AAAA,IACpB,CAAC;AAED,oBAAgB,KAAK,QAAQ;AAAA,EAC/B;AAEA,WAAS,EAAE,QAAQ,SAAS,cAAc,IAAI,UAAU,EAAE,GAAG,EAAE;AACjE;AAEA,SAAS,SAAS,OAAO,UAAU;AACjC,QAAM,YAAY,MAAM,OAAO;AAC/B,QAAM,WAAW,GAAG,YAAY,MAAM,OAAO;AAC7C,QAAM,QAAQ,eAAe;AAC7B,MAAI,UAAU;AAAW;AAEzB,QAAM,YAAY,MAAM,IAAI,WAAW,MAAS;AAEhD,MAAG,cAAc,QAAW;AAC1B,UAAM,UAAU,SAAS,eAAe,QAAQ;AAChD,QAAG,QAAQ,WAAW,YAAY;AAChC,uBAAiB,SAAS,SAAS;AAAA,IACrC,OAAO;AACL,cAAQ,QAAQ;AAAA,IAClB;AAAA,EACF;AACF;AAEA,SAAS,iBAAiB,UAAU,OAAO;AACzC,QAAM,gBAAgB,SAAS;AAC/B,MAAG,SAAS,eAAe;AACzB,aAAS,UAAU;AAAA,EACrB,OAAO;AACL,aAAS,UAAU;AAAA,EACrB;AACF;AAgBA,IAAM,QAAN,MAAY;AAAA,EACV,YAAY,GAAG,GAAG;AAGhB,SAAK,IAAI;AACT,SAAK,aAAa,CAAC;AAEnB,SAAK,IAAI;AACT,SAAK,aAAa,CAAC;AACnB,SAAK,QAAQ,MAAM,SAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AAAA,EACzC;AAAA,EAEA,IAAI,GAAG,GAAG,OAAO;AACf,QAAG,CAAC;AAAG;AACP,QAAI,eAAe,CAAC;AACpB,QAAI,eAAe,CAAC;AAEpB,QAAG,KAAK,WAAW,OAAO;AAAW,WAAK,WAAW,KAAK,OAAO,KAAK,KAAK,UAAU,EAAE;AACvF,QAAG,KAAK,KAAK,WAAW,OAAO;AAAW,WAAK,WAAW,KAAK,OAAO,KAAK,KAAK,UAAU,EAAE;AAE5F,UAAM,OAAO,KAAK,WAAW;AAC7B,UAAM,OAAO,KAAK,WAAW;AAE7B,QAAG,KAAK,MAAM,UAAU,QAAW;AACjC,WAAK,MAAM,QAAQ,MAAM,SAAY,SAAY,CAAC;AAAA,IACpD;AAGA,QAAG,SAAS,QAAW;AACrB,UAAG,KAAK,MAAM,UAAU,QAAU;AAChC,aAAK,MAAM,QAAQ;AAAA,MACrB,OAAO;AACL,cAAM,OAAO,KAAK,MAAM;AACxB,cAAM,QAAQ;AACd,YAAG,OAAO,SAAS,YAAY,OAAO,QAAQ,UAAS;AACrD,eAAK,MAAM,QAAQ;AAAA,QACrB,OAAO;AACL,eAAK,MAAM,QAAQ,OAAO,OAAO,MAAM,KAAK;AAAA,QAC9C;AAAA,MACF;AAAA,IACF,OAAO;AACL,UAAG,KAAK,MAAM,MAAM,UAAU,QAAU;AACtC,aAAK,MAAM,MAAM,QAAQ;AAAA,MAC3B,OAAO;AACL,cAAM,OAAO,KAAK,MAAM,MAAM;AAC9B,cAAM,QAAQ;AACd,YAAG,OAAO,SAAS,YAAY,OAAO,QAAQ,UAAS;AACrD,eAAK,MAAM,MAAM,QAAQ;AAAA,QAC3B,OAAO;AACL,eAAK,MAAM,MAAM,QAAQ,OAAO,OAAO,MAAM,KAAK;AAAA,QACpD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,GAAG,GAAG;AACR,UAAM,OAAO,KAAK,WAAW,eAAe,CAAC;AAC7C,UAAM,OAAO,KAAK,WAAW,eAAe,CAAC;AAE7C,QAAG,KAAK,MAAM,UAAU,QAAU;AAChC,aAAO;AAAA,IACT,WAAS,MAAM,QAAU;AACvB,aAAO,KAAK,MAAM;AAAA,IACpB,OAAM;AACJ,aAAO,KAAK,MAAM,MAAM;AAAA,IAC1B;AAAA,EACF;AACF;AAMA,SAAS,iBAAiB,OAAO,UAAU;AACzC,QAAM,MAAM,eAAe,KAAK;AAChC,QAAM,KAAK,MAAM,OAAO;AACxB,MAAI,gBAAgB;AAEpB,IAAE,IAAI,UAAU,EAAE,QAAQ,EAAE,KAAK,SAAS,IAAI,QAAQ;AACpD,QAAI,kBAAkB,OAAO,UAAU,OAAO;AAC9C,eAAWC,QAAO,iBAAiB;AAKjC,UAAIA,KAAI,MAAM,MAAM,GAAG;AACrB,wBAAgB,EAAE,MAAM;AAAA,MAC1B;AAAA,IACF;AAAA,EACF,CAAC;AAED,MAAI,kBAAkB,UAAa,cAAc,UAAU;AAAG;AAG9D,QAAM,OAAO,WAAW,IAAI,IAAI,UAAU,GAAG;AAC7C,MAAI,SAAS,SAAW,SAAS,UAAa,CAAC,cAAe;AAC5D,kBAAc,KAAK;AAAA,EACrB,WAAS,SAAS,MAAM;AACtB,kBAAc,KAAK;AAAA,EACrB;AACF;AAIA,SAAS,eAAe,OAAO;AAC7B,MAAG,MAAM,OAAO,WAAW,YAAY;AACrC,WAAO,MAAM,OAAO,UAAU,YAAY;AAAA,EAC5C,OAAO;AACL,WAAO,MAAM,OAAO;AAAA,EACtB;AACF;AAKA,SAAS,aAAa,OAAO,UAAU,SAAS;AAC9C,MAAI,IAAI,QAAW,IAAI;AAIvB,MAAI,YAAY,GAAG,MAAM,OAAO,SAAS;AACzC,MAAG,aAAa,eAAe,QAAW;AACxC,gBAAY,GAAG,WAAW;AAAA,EAC5B;AAEA,QAAM,QAAQ,aAAa;AAI3B,MAAG,MAAM,OAAO,SAAS,MAAM,GAAG;AAChC,QAAI,eAAe,MAAM,OAAO,KAAK;AACrC,QAAI,eAAe,EAAE,IAAI,SAAS,EAAE,IAAI,CAAC;AAAA,EAC3C,OAAO;AACL,QAAI,eAAe,MAAM,OAAO,KAAK;AACrC,QAAI,eAAe,EAAE,IAAI,SAAS,EAAE,IAAI,CAAC;AAAA,EAC3C;AAEA,QAAM,gBAAgB,EAAE,IAAI,UAAU;AACtC,QAAM,KAAK,MAAM,IAAI,GAAG,CAAC;AACzB,QAAM,OAAO;AAAA,IACX,KAAK,SAAS,cAAc,KAAK,KAAK,CAAC;AAAA,IACvC,KAAK,SAAS,cAAc,KAAK,KAAK,CAAC;AAAA,EACzC;AAEA,GAAE,OAAO,KAAM,EAAE,QAAQ,CAAC,QAAQ;AAChC,QAAG,MAAM,GAAG,SAAS,QAAW;AAC9B,oBAAc,KAAK,KAAK,GAAG,IAAI;AAAA,IACjC;AAAA,EACF,CAAC;AAED,QAAM,MAAM,MAAM,SAAS,cAAc,IAAI,CAAC,GAAG,MAAM,EAAE;AACzD,MAAI,QAAQ,QAAW;AACrB,kBAAc,KAAK,SAAS,GAAG;AAC/B,kBAAc,IAAI,GAAG;AAAA,EACvB;AACF;AAEA,SAAS,MAAM,cAAc,UAAU,MAAM;AAC3C,MAAG,SAAS,QAAU;AACpB,WAAO;AAAA,EAGT,WAAU,iBAAiB,SAAS,QAAQ;AAC1C,WAAO,KAAK;AAAA,EACd,WAAU,iBAAiB,SAAS,QAAQ;AAC1C,WAAO,KAAK;AAAA,EAGd,WAAU,gBAAgB,KAAK,QAAQ;AACrC,WAAO,KAAK;AAAA,EACd,WAAU,gBAAgB,KAAK,QAAQ;AACrC,WAAO,KAAK;AAAA,EACd,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAEA,SAAS,oBAAoB,SAAS,UAAU;AAC9C,QAAM,WAAW,OAAO,WAAW,EAAE;AAErC,MAAG,SAAS,UAAU,KAAK,sBAAsB,SAAS,SAAS,QAAQ,GAAG;AAE5E;AAAA,EACF;AAEA,MAAI,eAAe,EAAE,IAAI,SAAS;AAElC,MAAG,YAAY,cAAc;AAE3B,0BAAsB,SAAS,KAAK,QAAQ;AAE5C,iBAAa,GAAG,UAAU,CAAC,UAAU;AACnC,uBAAiB,OAAO,QAAQ;AAAA,IAClC,CAAC;AAGD,qBAAiB,EAAE,QAAQ,SAAS,cAAc,IAAI,SAAS,EAAE,GAAG,QAAQ;AAAA,EAC9E;AACF;AAEA,SAAS,iBAAiB,KAAK;AAC7B,QAAM,SAAS,IAAI,MAAM,sBAAsB;AAE/C,MAAG,WAAW,UAAa,OAAO,UAAU,OAAO,UAAU,GAAG;AAC9D,WAAO;AAAA,MACL,OAAO,OAAO;AAAA,MACd,SAAS,OAAO,GAAG,YAAY,KAAK,YAAY,YAAY;AAAA,IAC9D;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAaA,SAAS,eAAe,KAAK;AAC3B,MAAI,IAAI;AACR,MAAI,cAAc;AAClB,MAAI,iBAAiB;AACrB,MAAI,YAAY;AAEhB,MAAG,IAAI,WAAW,KAAK,GAAG;AACxB,QAAI,IAAI,QAAQ,QAAO,EAAE;AAAA,EAC3B,WAAU,IAAI,WAAW,KAAK,GAAG;AAC/B,QAAI,IAAI,QAAQ,QAAQ,EAAE;AAAA,EAC5B;AAGA,QAAM,SAAS,EAAE,MAAM,iBAAiB;AAExC,MAAG,UAAU,MAAM;AAEjB,gBAAY,YAAY,CAAC;AAAA,EAE3B,WAAU,OAAO,UAAU,GAAG;AAC5B,UAAM,UAAU,OAAO;AACvB,UAAM,gBAAgB,OAAO;AAC7B,gBAAY,YAAY,OAAO;AAE/B,UAAM,kBAAkB,cAAc,MAAM,WAAW;AACvD,QAAG,mBAAmB,gBAAgB,UAAU,GAAG;AAGjD,UAAG,gBAAgB,UAAU,GAAG;AAC9B,sBAAc,YAAY,gBAAgB,EAAE;AAC5C,yBAAiB,gBAAgB;AAAA,MAGnC,OAAO;AACL,YAAI,cAAc;AAClB,YAAI,OAAO;AACX,wBAAgB,QAAQ,CAAC,IAAI,QAAQ;AACnC,cAAG,MAAM;AAAE;AAAA,UAAQ;AAEnB,wBAAc,GAAG,cAAc;AAC/B,cAAI,UAAU,YAAY,WAAW;AACrC,cAAG,YAAY,QAAW;AACxB,mBAAO;AACP,0BAAc;AACd,6BAAiB,gBAAgB,MAAM,MAAI,CAAC,EAAE,KAAK,EAAE;AAAA,UACvD;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,aAAa;AAAA,IACb,eAAe;AAAA,IACf,kBAAkB,eAAe,cAAc;AAAA,EACjD;AACF;AAEA,SAAS,SAAS,KAAK;AACrB,MAAG,IAAI,WAAW,KAAK,GAAE;AACvB,WAAO;AAAA,EACT,WAAU,IAAI,WAAW,KAAK,GAAE;AAC9B,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAWA,SAAS,YAAY,KAAK;AACxB,aAAW,WAAW,IAAI,CAAC,UAAU;AACnC,QAAI,QAAQ,IAAI,MAAM,IAAI,UAAU;AAEpC,QAAI,SAAS,MAAM,UAAU,GAAG;AAC9B,UAAI,MAAM,eAAe,MAAM,EAAE;AACjC,aAAO,aAAa,GAAG;AAAA,IACzB;AAAA,EACF,CAAC,EAAE,OAAO,CAAC,OAAO;AAChB,WAAO,OAAO;AAAA,EAChB,CAAC;AAED,MAAG,SAAS,UAAU,GAAG;AACvB,WAAO;AAAA,EACT,WAAS,SAAS,UAAU,GAAG;AAC7B,WAAO,SAAS;AAAA,EAKlB,WAAU,SAAS,SAAS,GAAG;AAC7B,UAAM,iBAAiB,eAAe,GAAG;AACzC,WAAO,SAAS,OAAO,CAAC,YAAY;AAClC,aAAO,QAAQ,SAAS,cAAc;AAAA,IACxC,CAAC,EAAE;AAAA,EACL;AACF;AAYA,SAAS,mBAAmB,KAAK;AAC/B,SAAO,WAAW,IAAI,CAAC,UAAU;AAC/B,QAAI,QAAQ,IAAI,MAAM,aAAa,OAAO;AAE1C,QAAI,SAAS,MAAM,UAAU,GAAG;AAC9B,aAAO;AAAA,IACT;AAAA,EACF,CAAC,EAAE,OAAO,CAAC,OAAO;AAChB,WAAO,OAAO;AAAA,EAChB,CAAC,EAAE;AACL;AASC,SAAS,iBAAiB,QAAQ,WAAW;AAC5C,QAAMC,WAAU,CAAC,GAAG,SAAS,iBAAiB,IAAI,kBAAkB,CAAC;AACrE,MAAI,oBAAoB;AAExB,EAAAA,SAAQ,QAAQ,YAAU;AACxB,QAAI,OAAO;AAKX,aAAS,OAAO,OAAO,KAAK,OAAO,OAAO,GAAG;AAC3C,UAAI,YAAY,mBAAmB,GAAG;AACtC,UAAI,cAAc,YAAY,IAAI,QAAQ,cAAa,EAAE,CAAC;AAG1D,UAAG,CAAC,IAAI,WAAW,WAAW,KAAK,gBAAgB,QAAW;AAC5D;AAAA,MACF;AAEA,UAAI,iBAAiB,kBAAkB,SAAS,eAAe,WAAW,EAAE,KAAK;AAGjF,UAAI,eAAe,MAAM,KAAK,GAAG;AAC/B,yBAAiB,IAAI;AAAA,MACvB;AAEA,aAAO,OAAO,QAAQ,YAAY,YAAY,sBAAsB;AACpE,UAAI,MAAM;AACR;AAAA,MACF;AAAA,IACF;AAAC;AAED,QAAG,MAAM;AACP,UAAG,OAAO,UAAU;AAClB,eAAO,WAAW;AAClB,4BAAoB,OAAO;AAAA,MAC7B;AAEA,aAAO,MAAM,UAAU;AACvB,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,aAAO,MAAM,UAAU;AACvB,aAAO,WAAW;AAAA,IACpB;AAAA,EACF,CAAC;AAKD,MAAG,sBAAsB,QAAW;AAClC,QAAI,SAAS,CAAC,GAAG,SAAS,iBAAiB,IAAI,2BAA2B,qBAAqB,CAAC;AAChG,QAAI,oBAAoB;AAGxB,QAAG,OAAO,SAAS,GAAG;AACpB,aAAO,QAAQ,SAAO;AACpB,YAAG,IAAI,MAAM,YAAY,IAAI;AAC3B,8BAAoB;AACpB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,sBAAsB,QAAW;AACnC,eAAS,SAAS,iBAAiB,IAAI,kBAAkB;AACzD,aAAO,QAAQ,SAAO;AACpB,YAAG,sBAAsB,UAAa,IAAI,MAAM,YAAY,IAAI;AAC9D,8BAAoB;AAAA,QACtB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAI,sBAAsB,QAAW;AACnC,wBAAkB,WAAW;AAAA,IAC/B;AAAA,EACF;AAGA,WAAS,eAAe,SAAS,EAAE,cAAe,IAAI,MAAM,UAAU,EAAE,SAAS,KAAK,CAAC,CAAE;AAC3F;;;ACrxBA,OAAO,WAAW;AAChB,MAAG,qBAAqB,GAAE;AACxB,uBAAmB,+BAA+B;AAAA,EACpD;AAEA,sBAAoB;AACpB,0BAAwB;AACxB,uBAAqB;AACvB,CAAC;",
  "names": ["options", "response", "options", "elements", "options", "_i", "val", "options"]
}
