{
  "version": 3,
  "sources": ["../../javascript/config.js", "../../javascript/utils.js", "../../javascript/turbo_shim.js", "../../javascript/projects.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "import {analyticsPath} from \"./config\";\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  const href = event.target.href;\n\n  // do nothing if there's no href.\n  if(href == null){\n    return;\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n", "\n/*\n  While we want Turbo enabled at some point,\n  it doesn't really work well yet. So, we'll provide\n  this shim until we enable it.\n*/\n\nimport { setInnerHTML } from './utils';\n\nexport function replaceHTML(id, html) {\n  const ele = document.getElementById(id);\n\n  if(ele == null){\n    return;\n  } else {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    const newHTML = tmp.querySelector('template').innerHTML;\n    tmp.remove();\n\n    setInnerHTML(ele, newHTML);\n  }\n}\n\nexport function pollAndReplace(url, delay, id, callback) {\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => replaceHTML(id, html))\n    .then(() => {\n      setTimeout(pollAndReplace, delay, url, delay, id, callback);\n      if (typeof callback == 'function') {\n        callback();\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot retrieve partial due to error:');\n      console.log(err);\n    });\n}\n", "import { rootPath } from './config.js';\nimport { replaceHTML } from './turbo_shim';\n\n\njQuery(function() {\n  $('[data-job-poller=\"true\"]').each((_index, ele) => {\n    pollForJobInfo(ele);\n  });\n\n  $(\"[data-bs-toggle='project']\").each((_index, ele) => {\n    updateProjectSize(ele);\n  });\n});\n\nfunction jobDetailsPath(cluster, jobId) {\n  const baseUrl = rootPath();\n  const config = document.getElementById('project_config');\n  const projectId = config.dataset['projectId'];\n\n  return `${baseUrl}/projects/${projectId}/jobs/${cluster}/${jobId}`;\n}\n\nfunction pollForJobInfo(element) {\n  const cluster = element.dataset['jobCluster'];\n  const jobId = element.dataset['jobId'];\n\n  if(cluster === undefined || jobId === undefined){ return; }\n\n  const url = jobDetailsPath(cluster, jobId);\n\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => {\n      // if the job panel is currently open by the user, make the new\n      // html open as well.\n      const currentData = element.querySelector(`#${element.id}_data`);\n      let currentlyOpen = false;\n      const responseElement = stringToHtml(html);\n\n      if(currentData != null) {\n        currentlyOpen = currentData.classList.contains('show');\n      }\n\n      // if it's currently open keep it open.\n      if(currentlyOpen) {\n        const dataDiv = responseElement.querySelector(`#${element.id}_data`);\n        dataDiv.classList.add('show');\n      }\n\n      const jobStatus = responseElement.dataset['jobStatus'];\n      if(jobStatus === 'completed') {\n        moveCompletedPanel(element.id, responseElement.outerHTML);\n      } else {\n        replaceHTML(element.id, responseElement.outerHTML);\n      }\n\n      return jobStatus;\n    })\n    .then((status) => {\n      if(status != 'completed') {\n        setTimeout(pollForJobInfo, 30000, element);\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot not retrive job details due to error:');\n      console.log(err);\n    });\n}\n\nfunction stringToHtml(html) {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template.content.firstChild;\n}\n\nfunction moveCompletedPanel(id, newHTML) {\n  const oldElement = document.getElementById(id);\n  if(oldElement !== null) {\n    oldElement.remove();\n  }\n\n  const div = document.createElement('div');\n  div.id = id;\n  div.classList.add('col-md-4');\n\n  const row = document.getElementById('completed_jobs');\n  row.appendChild(div);\n\n  replaceHTML(id, newHTML);\n}\n\nfunction updateProjectSize(element) {\n  const UNDETERMINED = 'Undetermined Size';\n  const $container = $(element);\n\n  const projectPath = $container.data('url');\n  $.ajax({\n    url: projectPath,\n    type: 'GET',\n    headers: {\n      'Accept': 'application/json'\n    },\n    success: function (projectData) {\n      const projectSize = projectData.size === 0 ? UNDETERMINED : projectData.human_size;\n      $container.text(`(${projectSize})`);\n    },\n    error: function (request, status, error) {\n      console.log(\"An error occurred getting project size!\\n\" + error);\n      $container.text(`(${UNDETERMINED})`);\n    }\n  });\n}\n"],
  "mappings": "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",
  "names": ["rootPath"]
}
